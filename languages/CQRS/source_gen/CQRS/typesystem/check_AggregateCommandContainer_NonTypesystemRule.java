package CQRS.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import CQRS.behavior.CommandContainer__BehaviorDescriptor;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import CQRS.behavior.IOptionalValidIdentifierWrapper__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SConcept;

public class check_AggregateCommandContainer_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_AggregateCommandContainer_NonTypesystemRule() {
  }
  public void applyRule(final SNode commandContainer, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    INamedConceptExtensions.forEachDuplicateName(CommandContainer__BehaviorDescriptor.commands_idoGImgOKxc1.invoke(commandContainer), (SNode command) -> {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(command, "Command already defined", "r:536879c6-46f8-4c9c-860d-b388e5bcaaf0(CQRS.typesystem)", "189280670440636664", null, errorTarget);
      }
    });

    if ((boolean) CommandContainer__BehaviorDescriptor.isCommandHandler_id1LTEHzOfCt.invoke(commandContainer)) {
      if ((SLinkOperations.getTarget(commandContainer, LINKS.aggregateReference$V1gV) == null) && !((boolean) IOptionalValidIdentifierWrapper__BehaviorDescriptor.isNameSet_id2RbvdOKU7zU.invoke(SLinkOperations.getTarget(commandContainer, LINKS.nameWrapper$X65Q)))) {
        {
          final MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(commandContainer, "Command handler name has to be specified", "r:536879c6-46f8-4c9c-860d-b388e5bcaaf0(CQRS.typesystem)", "5614474895161842905", null, errorTarget);
        }
      }
    }

    if (SPropertyOperations.getBoolean(commandContainer, PROPS.shouldDisplayAggregate$eU79) && (SLinkOperations.getTarget(commandContainer, LINKS.aggregateReference$V1gV) == null)) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(commandContainer, "Aggregate has to be specified", "r:536879c6-46f8-4c9c-860d-b388e5bcaaf0(CQRS.typesystem)", "5800372501176447073", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.CommandContainer$3C;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink nameWrapper$X65Q = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x71e6ab661db3f2L, 0x2dcb7cdd32004e34L, "nameWrapper");
    /*package*/ static final SContainmentLink aggregateReference$V1gV = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x2a075c454595567L, 0x7849637c487da2bcL, "aggregateReference");
  }

  private static final class PROPS {
    /*package*/ static final SProperty shouldDisplayAggregate$eU79 = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x2a075c454595567L, 0x507f100ee0ae3ec7L, "shouldDisplayAggregate");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept CommandContainer$3C = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x2a075c454595567L, "CQRS.structure.CommandContainer");
  }
}
