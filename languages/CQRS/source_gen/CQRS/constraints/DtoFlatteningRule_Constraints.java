package CQRS.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_DefaultScopeProvider;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.scope.EmptyScope;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SEnumerationLiteral;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import java.util.Objects;
import CQRS.behavior.IDtoDerivation__BehaviorDescriptor;
import CQRS.behavior.BoundedContext__BehaviorDescriptor;
import CQRS.behavior.IElementOfBoundedContext__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import CQRS.behavior.IDtoDerivationRuleReference__BehaviorDescriptor;
import jetbrains.mps.scope.ListScope;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class DtoFlatteningRule_Constraints extends BaseConstraintsDescriptor {
  public DtoFlatteningRule_Constraints() {
    super(CONCEPTS.DtoFlatteningRule$GR);
  }

  @Override
  public ConstraintFunction<ConstraintContext_DefaultScopeProvider, ReferenceScopeProvider> calculateDefaultScopeConstraint() {
    return new ConstraintFunction<ConstraintContext_DefaultScopeProvider, ReferenceScopeProvider>() {
      @Nullable
      public ReferenceScopeProvider invoke(@NotNull ConstraintContext_DefaultScopeProvider context, @Nullable CheckingNodeContext checkingNodeContext) {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:0d7993a3-d2b8-4ac6-8b11-a4cb9134a9ef(CQRS.constraints)", "1609993669778203965");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            SNode component = SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.IBoundedContextComponent$2H, true, false);

            {
              final SNode flatRule = component;
              if (SNodeOperations.isInstanceOf(flatRule, CONCEPTS.DtoFlatteningRule$GR)) {
                return DtoFlatteningRule_Constraints.this._additional_provideDtoFlatDerivationRuleScope(flatRule, _context.getContextNode());
              }
            }

            {
              final SNode dto = component;
              if (SNodeOperations.isInstanceOf(dto, CONCEPTS.Dto$yu)) {
                return DtoFlatteningRule_Constraints.this._additional_provideDtoRuleScope(dto, _context.getContextNode());
              }
            }

            return new EmptyScope();
          }
        };
      }
    };
  }
  public static class NameConvention_Property extends BasePropertyConstraintsDescriptor {
    public NameConvention_Property(ConstraintsDescriptor container) {
      super(PROPS.nameConvention$LtCG, container, false, true, false);
    }
    @Override
    public void setPropertyValue(SNode node, Object propertyValue) {
      staticSetPropertyValue(node, SPropertyOperations.castEnummember(propertyValue));
    }
    private static void staticSetPropertyValue(SNode node, SEnumerationLiteral propertyValue) {
      if (SEnumOperations.isMember(propertyValue, 0x3cfd70789afeffaaL)) {
        SNodeOperations.deleteNode(SLinkOperations.getTarget(node, LINKS.nameWrapper$X65Q));
      }
      SPropertyOperations.setEnum(node, PROPS.nameConvention$LtCG, propertyValue);
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.nameConvention$LtCG, new NameConvention_Property(this));
    return properties;
  }
  private Scope _additional_provideDtoFlatDerivationRuleScope(SNode node, final SNode contextNode) {
    if (node == contextNode || Objects.equals(SNodeOperations.getContainingLink(contextNode), LINKS.derivationRuleReferences$YFqo)) {
      IDtoDerivation__BehaviorDescriptor.usedDerivationRules_id5YqiGT0qq9q.invoke(node);

      Iterable<SNode> dtoFlattteningRules = BoundedContext__BehaviorDescriptor.dtoExplicitFlattteningRules_idE4RYE8KrhY.invoke(IElementOfBoundedContext__BehaviorDescriptor.boundedContext_id3VGLvhEO$iA.invoke(node));
      final Iterable<SNode> usedFlatteningRules = IDtoDerivation__BehaviorDescriptor.findUsedFlatteningRules_id5QsWOhW8P2M.invoke(node);
      Iterable<SNode> resultFlatteningRules = Sequence.fromIterable(dtoFlattteningRules).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return it == IDtoDerivationRuleReference__BehaviorDescriptor.getReferencedRule_id5YqiGT0mxXR.invoke(SNodeOperations.as(contextNode, CONCEPTS.IDtoDerivationRuleReference$eE)) || !(Sequence.fromIterable(usedFlatteningRules).contains(it));
        }
      });

      return ListScope.forNamedElements(resultFlatteningRules);
    }

    return new EmptyScope();
  }
  private Scope _additional_provideDtoRuleScope(SNode node, final SNode contextNode) {
    if (node == contextNode || Objects.equals(SNodeOperations.getContainingLink(contextNode), LINKS.derivationRuleReferences$YFqo)) {
      IDtoDerivation__BehaviorDescriptor.usedDerivationRules_id5YqiGT0qq9q.invoke(node);

      Iterable<SNode> dtoFlattteningRules = BoundedContext__BehaviorDescriptor.dtoExplicitFlattteningRules_idE4RYE8KrhY.invoke(IElementOfBoundedContext__BehaviorDescriptor.boundedContext_id3VGLvhEO$iA.invoke(node));
      final Iterable<SNode> usedFlatteningRules = IDtoDerivation__BehaviorDescriptor.findUsedFlatteningRules_id5QsWOhW8P2M.invoke(node);
      Iterable<SNode> resultFlatteningRules = Sequence.fromIterable(dtoFlattteningRules).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return it == IDtoDerivationRuleReference__BehaviorDescriptor.getReferencedRule_id5YqiGT0mxXR.invoke(SNodeOperations.as(contextNode, CONCEPTS.IDtoDerivationRuleReference$eE)) || !(Sequence.fromIterable(usedFlatteningRules).contains(it));
        }
      });

      return ListScope.forNamedElements(resultFlatteningRules);
    }

    return new EmptyScope();
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DtoFlatteningRule$GR = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x12da95fb99e0f985L, "CQRS.structure.DtoFlatteningRule");
    /*package*/ static final SInterfaceConcept IBoundedContextComponent$2H = MetaAdapterFactory.getInterfaceConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6375c6ceebab8368L, "CQRS.structure.IBoundedContextComponent");
    /*package*/ static final SConcept Dto$yu = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f903L, "CQRS.structure.Dto");
    /*package*/ static final SInterfaceConcept IDtoDerivationRuleReference$eE = MetaAdapterFactory.getInterfaceConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x5d9cf3447c732a76L, "CQRS.structure.IDtoDerivationRuleReference");
  }

  private static final class PROPS {
    /*package*/ static final SProperty nameConvention$LtCG = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x12da95fb99e0f985L, 0x3cfd70789aff025eL, "nameConvention");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink nameWrapper$X65Q = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x71e6ab661db3f2L, 0x2dcb7cdd32004e34L, "nameWrapper");
    /*package*/ static final SContainmentLink derivationRuleReferences$YFqo = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3cfd70789857e2b7L, 0x5d9cf3447c21f3d5L, "derivationRuleReferences");
  }
}
