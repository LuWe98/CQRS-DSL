package CQRS.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public final class QueryGenerationSettings__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee2941L, "CQRS.structure.QueryGenerationSettings");

  public static final SMethod<Boolean> isQueryHandlingSettingDefined_id5qxF18ESB_m = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isQueryHandlingSettingDefined").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6242459752541092182L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getQueryHandlingSetting_id5qxF18ESB_u = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getQueryHandlingSetting").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6242459752541092190L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getQueryHandlingSettingOrDefault_id3GrpC3f2Nth = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getQueryHandlingSettingOrDefault").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(4259110576024401745L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> isQueryProcessingSettingDefined_id5qxF18EUWYK = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isQueryProcessingSettingDefined").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6242459752541704112L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getQueryProcessingSetting_id5qxF18EUWYS = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getQueryProcessingSetting").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6242459752541704120L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getQueryProcessingSettingOrDefault_id3GrpC3f2Q5D = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getQueryProcessingSettingOrDefault").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(4259110576024412521L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(isQueryHandlingSettingDefined_id5qxF18ESB_m, getQueryHandlingSetting_id5qxF18ESB_u, getQueryHandlingSettingOrDefault_id3GrpC3f2Nth, isQueryProcessingSettingDefined_id5qxF18EUWYK, getQueryProcessingSetting_id5qxF18EUWYS, getQueryProcessingSettingOrDefault_id3GrpC3f2Q5D);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static boolean isQueryHandlingSettingDefined_id5qxF18ESB_m(@NotNull SNode __thisNode__) {
    return (QueryGenerationSettings__BehaviorDescriptor.getQueryHandlingSetting_id5qxF18ESB_u.invoke(__thisNode__) != null);
  }
  /*package*/ static SNode getQueryHandlingSetting_id5qxF18ESB_u(@NotNull SNode __thisNode__) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(__thisNode__, LINKS.components$hJ0Z), CONCEPTS.QueryHandlingSetting$mY)).first();
  }
  /*package*/ static SNode getQueryHandlingSettingOrDefault_id3GrpC3f2Nth(@NotNull SNode __thisNode__) {
    SNode setting = QueryGenerationSettings__BehaviorDescriptor.getQueryHandlingSetting_id5qxF18ESB_u.invoke(__thisNode__);
    return ((setting != null) ? setting : SNodeFactoryOperations.createNewNode(CONCEPTS.QueryHandlingSetting$mY, null));
  }
  /*package*/ static boolean isQueryProcessingSettingDefined_id5qxF18EUWYK(@NotNull SNode __thisNode__) {
    return (QueryGenerationSettings__BehaviorDescriptor.getQueryProcessingSetting_id5qxF18EUWYS.invoke(__thisNode__) != null);
  }
  /*package*/ static SNode getQueryProcessingSetting_id5qxF18EUWYS(@NotNull SNode __thisNode__) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(__thisNode__, LINKS.components$hJ0Z), CONCEPTS.QueryProcessingSetting$UD)).first();
  }
  /*package*/ static SNode getQueryProcessingSettingOrDefault_id3GrpC3f2Q5D(@NotNull SNode __thisNode__) {
    SNode setting = QueryGenerationSettings__BehaviorDescriptor.getQueryProcessingSetting_id5qxF18EUWYS.invoke(__thisNode__);
    return ((setting != null) ? setting : SNodeFactoryOperations.createNewNode(CONCEPTS.QueryProcessingSetting$UD, null));
  }

  /*package*/ QueryGenerationSettings__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Boolean) isQueryHandlingSettingDefined_id5qxF18ESB_m(node));
      case 1:
        return (T) ((SNode) getQueryHandlingSetting_id5qxF18ESB_u(node));
      case 2:
        return (T) ((SNode) getQueryHandlingSettingOrDefault_id3GrpC3f2Nth(node));
      case 3:
        return (T) ((Boolean) isQueryProcessingSettingDefined_id5qxF18EUWYK(node));
      case 4:
        return (T) ((SNode) getQueryProcessingSetting_id5qxF18EUWYS(node));
      case 5:
        return (T) ((SNode) getQueryProcessingSettingOrDefault_id3GrpC3f2Q5D(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink components$hJ0Z = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee2941L, 0x56a1ac122aceefdeL, "components");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept QueryHandlingSetting$mY = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x56a1ac122ac5a076L, "CQRS.structure.QueryHandlingSetting");
    /*package*/ static final SConcept QueryProcessingSetting$UD = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x56a1ac122acef4d6L, "CQRS.structure.QueryProcessingSetting");
  }
}
