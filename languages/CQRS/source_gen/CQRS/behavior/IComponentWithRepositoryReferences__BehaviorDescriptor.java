package CQRS.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import CQRS.util.CollectionUtils;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.Collections;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import CQRS.util.ConceptUtils;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public final class IComponentWithRepositoryReferences__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getInterfaceConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e12ecL, "CQRS.structure.IComponentWithRepositoryReferences");

  public static final SMethod<SAbstractConcept> allowedRepositoryReferenceType_idmdpAJN9aTg = new SMethodBuilder<SAbstractConcept>(new SJavaCompoundTypeImpl((Class<SAbstractConcept>) ((Class) Object.class))).name("allowedRepositoryReferenceType").modifiers(12, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(400088555732643408L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<List<SNode>> getRepositoryReferences_idomljbwTthl = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("getRepositoryReferences").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690725086293L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> getRepositories_id5jZDGTileiF = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getRepositories").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321932971L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> areReferencesOnChildrenAllowed_idomljbwD$pt = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("areReferencesOnChildrenAllowed").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690720921181L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> canExecuteRequiresTransformation_idomljbxf$Pf = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("canExecuteRequiresTransformation").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690730884431L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter(EditorContext.class, ""), SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> executeRequiresTransformation_idomljbxfYaR = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("executeRequiresTransformation").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690730988215L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter(EditorContext.class, ""), SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<SNode> findParentComponentWithRepositoryReferences_idd$u27T5hnJ = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("findParentComponentWithRepositoryReferences").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093011951L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> findChildComponentsWithRepositoryReferences_idd$u27T6o6s = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("findChildComponentsWithRepositoryReferences").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093301660L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> findOtherRepositoryReferenceFor_idmdpAJOdxPO = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("findOtherRepositoryReferenceFor").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(400088555750563188L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Iterable<SNode>> repositoryReferencesIncludingParent_id3fVLq_tWtGK = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("repositoryReferencesIncludingParent").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3745804846304975664L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> repositoryReferencesIncludingChildren_id3fVLq_tW6lG = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("repositoryReferencesIncludingChildren").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3745804846304879980L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> isReferencing_id5jZDGTikSOc = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isReferencing").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845004L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> isReferencing_id5jZDGTilx5F = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isReferencing").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423322009963L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> hasReferences_id5jZDGTikSOr = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("hasReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845019L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> showReferencesIfNotEmpty_idmdpAJOxpuA = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("showReferencesIfNotEmpty").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(400088555755771814L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> clearReferences_id5jZDGTikSO_ = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("clearReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845029L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> resetReferences_id5jZDGTikSOJ = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("resetReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845039L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> resetReferencesIfEmpty_id5jZDGTikSOY = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("resetReferencesIfEmpty").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845054L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> removeReference_id5jZDGTikSPa = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("removeReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845066L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> removeReference_id5jZDGTikSPw = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("removeReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845088L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> removeReferences_id5jZDGTikSPF = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("removeReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845099L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Void> removeReferences_id5jZDGTikSQ3 = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("removeReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845123L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Void> addReference_id5jZDGTikSQn = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("addReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845143L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> addReference_id5jZDGTikSQy = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("addReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845154L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> addReferences_id5jZDGTikSQJ = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("addReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845167L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Void> addReferences_id5jZDGTikSR3 = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("addReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845187L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Void> setReferences_id5jZDGTikSRj = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("setReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845203L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Void> setReferences_id5jZDGTikSRB = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("setReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423321845223L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<Iterable<SNode>> findRepositoriesNotInParentContainer_idd$u27T5azX = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("findRepositoriesNotInParentContainer").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367092984061L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> findRepositoriesNotInParentContainer_idomljbxmeEv = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("findRepositoriesNotInParentContainer").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690732628639L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Iterable<SNode>> findRepositoriesInParentContainer_idd$u27T5a$O = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("findRepositoriesInParentContainer").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367092984116L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> findRepositoriesInParentContainer_idomljbxn5WH = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("findRepositoriesInParentContainer").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690732855085L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> resetChildRepositoryReferences_idd$u27T68Vq = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("resetChildRepositoryReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093239514L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> getReferencedRepositoriesOfChildren_idd$u27T68VE = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getReferencedRepositoriesOfChildren").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093239530L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> mergeChildRepositoryReferences_idd$u27T68Wb = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("mergeChildRepositoryReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093239563L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> resetAndMergeChildRepositoryReferences_idd$u27T68WS = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("resetAndMergeChildRepositoryReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(244452367093239608L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Void> onPastedInParentComponentWithRepositoryReferences_idomljbxlS61 = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("onPastedInParentComponentWithRepositoryReferences").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690732536193L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(allowedRepositoryReferenceType_idmdpAJN9aTg, getRepositoryReferences_idomljbwTthl, getRepositories_id5jZDGTileiF, areReferencesOnChildrenAllowed_idomljbwD$pt, canExecuteRequiresTransformation_idomljbxf$Pf, executeRequiresTransformation_idomljbxfYaR, findParentComponentWithRepositoryReferences_idd$u27T5hnJ, findChildComponentsWithRepositoryReferences_idd$u27T6o6s, findOtherRepositoryReferenceFor_idmdpAJOdxPO, repositoryReferencesIncludingParent_id3fVLq_tWtGK, repositoryReferencesIncludingChildren_id3fVLq_tW6lG, isReferencing_id5jZDGTikSOc, isReferencing_id5jZDGTilx5F, hasReferences_id5jZDGTikSOr, showReferencesIfNotEmpty_idmdpAJOxpuA, clearReferences_id5jZDGTikSO_, resetReferences_id5jZDGTikSOJ, resetReferencesIfEmpty_id5jZDGTikSOY, removeReference_id5jZDGTikSPa, removeReference_id5jZDGTikSPw, removeReferences_id5jZDGTikSPF, removeReferences_id5jZDGTikSQ3, addReference_id5jZDGTikSQn, addReference_id5jZDGTikSQy, addReferences_id5jZDGTikSQJ, addReferences_id5jZDGTikSR3, setReferences_id5jZDGTikSRj, setReferences_id5jZDGTikSRB, findRepositoriesNotInParentContainer_idd$u27T5azX, findRepositoriesNotInParentContainer_idomljbxmeEv, findRepositoriesInParentContainer_idd$u27T5a$O, findRepositoriesInParentContainer_idomljbxn5WH, resetChildRepositoryReferences_idd$u27T68Vq, getReferencedRepositoriesOfChildren_idd$u27T68VE, mergeChildRepositoryReferences_idd$u27T68Wb, resetAndMergeChildRepositoryReferences_idd$u27T68WS, onPastedInParentComponentWithRepositoryReferences_idomljbxlS61);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static List<SNode> getRepositoryReferences_idomljbwTthl(@NotNull SNode __thisNode__) {
    return SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe);
  }
  /*package*/ static Iterable<SNode> getRepositories_id5jZDGTileiF(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it);
      }
    });
  }
  /*package*/ static boolean areReferencesOnChildrenAllowed_idomljbwD$pt(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean canExecuteRequiresTransformation_idomljbxf$Pf(@NotNull SNode __thisNode__, EditorContext editorContext, SNode node) {
    return !(SPropertyOperations.getBoolean(__thisNode__, PROPS.shouldDisplayReferences$PJ7j));
  }
  /*package*/ static void executeRequiresTransformation_idomljbxfYaR(@NotNull SNode __thisNode__, EditorContext editorContext, SNode node) {
    SPropertyOperations.set(__thisNode__, PROPS.shouldDisplayReferences$PJ7j, true);
    SelectionUtil.selectLabelCellAnSetCaret(editorContext, __thisNode__, "repositoryReferenceListStartCellId", -1);
  }
  /*package*/ static SNode findParentComponentWithRepositoryReferences_idd$u27T5hnJ(@NotNull SNode __thisNode__) {
    return SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.IComponentWithRepositoryReferences$Ob, false, false);
  }
  /*package*/ static Iterable<SNode> findChildComponentsWithRepositoryReferences_idd$u27T6o6s(@NotNull SNode __thisNode__) {
    return SNodeOperations.getNodeDescendants(__thisNode__, CONCEPTS.IComponentWithRepositoryReferences$Ob, false, new SAbstractConcept[]{});
  }
  /*package*/ static SNode findOtherRepositoryReferenceFor_idmdpAJOdxPO(@NotNull SNode __thisNode__, final SNode newReference) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it) == IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(newReference);
      }
    }).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it != newReference;
      }
    });
  }
  /*package*/ static Iterable<SNode> repositoryReferencesIncludingParent_id3fVLq_tWtGK(@NotNull SNode __thisNode__) {
    SNode parent = IComponentWithRepositoryReferences__BehaviorDescriptor.findParentComponentWithRepositoryReferences_idd$u27T5hnJ.invoke(__thisNode__);
    if ((parent == null)) {
      return SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe);
    }
    return CollectionUtils.setOf(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe), SLinkOperations.getChildren(parent, LINKS.repositoryReferences$PHWe));
  }
  /*package*/ static Iterable<SNode> repositoryReferencesIncludingChildren_id3fVLq_tW6lG(@NotNull SNode __thisNode__) {
    Iterable<SNode> childRepositories = Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.findChildComponentsWithRepositoryReferences_idd$u27T6o6s.invoke(__thisNode__)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return ListSequence.fromList(SLinkOperations.getChildren(it, LINKS.repositoryReferences$PHWe)).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return (SNode) IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it);
          }
        });
      }
    });
    Iterable<SNode> repositories = ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it);
      }
    });
    return SetSequence.fromSet(CollectionUtils.setOf(repositories, childRepositories)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepository__BehaviorDescriptor.toRepositoryReference_id5jZDGTilCJr.invoke(it);
      }
    });
  }
  /*package*/ static boolean isReferencing_id5jZDGTikSOc(@NotNull SNode __thisNode__, SNode reference) {
    return ((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.isReferencing_id5jZDGTilx5F.invoke(__thisNode__, IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(reference)));
  }
  /*package*/ static boolean isReferencing_id5jZDGTilx5F(@NotNull SNode __thisNode__, SNode repository) {
    return Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.getRepositories_id5jZDGTileiF.invoke(__thisNode__)).contains(repository);
  }
  /*package*/ static boolean hasReferences_id5jZDGTikSOr(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).isNotEmpty();
  }
  /*package*/ static void showReferencesIfNotEmpty_idmdpAJOxpuA(@NotNull SNode __thisNode__) {
    if (((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.hasReferences_id5jZDGTikSOr.invoke(__thisNode__))) {
      SPropertyOperations.set(__thisNode__, PROPS.shouldDisplayReferences$PJ7j, true);
    }
  }
  /*package*/ static void clearReferences_id5jZDGTikSO_(@NotNull SNode __thisNode__) {
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).clear();
  }
  /*package*/ static void resetReferences_id5jZDGTikSOJ(@NotNull SNode __thisNode__) {
    SPropertyOperations.set(__thisNode__, PROPS.shouldDisplayReferences$PJ7j, false);
    IComponentWithRepositoryReferences__BehaviorDescriptor.clearReferences_id5jZDGTikSO_.invoke(__thisNode__);
  }
  /*package*/ static void resetReferencesIfEmpty_id5jZDGTikSOY(@NotNull SNode __thisNode__) {
    if (!((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.hasReferences_id5jZDGTikSOr.invoke(__thisNode__))) {
      IComponentWithRepositoryReferences__BehaviorDescriptor.resetReferences_id5jZDGTikSOJ.invoke(__thisNode__);
    }
  }
  /*package*/ static void removeReference_id5jZDGTikSPa(@NotNull SNode __thisNode__, final SNode repository) {
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).removeWhere(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it) == repository;
      }
    });
  }
  /*package*/ static void removeReference_id5jZDGTikSPw(@NotNull SNode __thisNode__, SNode reference) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.removeReference_id5jZDGTikSPa.invoke(__thisNode__, IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(reference));
  }
  /*package*/ static void removeReferences_id5jZDGTikSPF(@NotNull SNode __thisNode__, final Iterable<SNode> repositories) {
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).removeWhere(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return Sequence.fromIterable(repositories).contains(IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it));
      }
    });
  }
  /*package*/ static void removeReferences_id5jZDGTikSQ3(@NotNull SNode __thisNode__, Iterable<SNode> references) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.removeReferences_id5jZDGTikSPF.invoke(__thisNode__, Sequence.fromIterable(references).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepositoryReference__BehaviorDescriptor.getRepository_id5jZDGTil89u.invoke(it);
      }
    }));
  }
  /*package*/ static void addReference_id5jZDGTikSQn(@NotNull SNode __thisNode__, SNode repository) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.addReference_id5jZDGTikSQy.invoke(__thisNode__, IRepository__BehaviorDescriptor.toRepositoryReference_id5jZDGTilCJr.invoke(repository));
  }
  /*package*/ static void addReference_id5jZDGTikSQy(@NotNull SNode __thisNode__, SNode reference) {
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).addElement(reference);
  }
  /*package*/ static void addReferences_id5jZDGTikSQJ(@NotNull SNode __thisNode__, Iterable<SNode> repositories) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.addReferences_id5jZDGTikSR3.invoke(__thisNode__, Sequence.fromIterable(repositories).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepository__BehaviorDescriptor.toRepositoryReference_id5jZDGTilCJr.invoke(it);
      }
    }));
  }
  /*package*/ static void addReferences_id5jZDGTikSR3(@NotNull SNode __thisNode__, Iterable<SNode> references) {
    SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe).addAll(Sequence.fromIterable(references).toListSequence());
  }
  /*package*/ static void setReferences_id5jZDGTikSRj(@NotNull SNode __thisNode__, Iterable<SNode> repositories) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.setReferences_id5jZDGTikSRB.invoke(__thisNode__, Sequence.fromIterable(repositories).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNode) IRepository__BehaviorDescriptor.toRepositoryReference_id5jZDGTilCJr.invoke(it);
      }
    }));
  }
  /*package*/ static void setReferences_id5jZDGTikSRB(@NotNull SNode __thisNode__, Iterable<SNode> references) {
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe)).clear();
    SLinkOperations.getChildren(__thisNode__, LINKS.repositoryReferences$PHWe).addAll(Sequence.fromIterable(references).toListSequence());
  }
  /*package*/ static Iterable<SNode> findRepositoriesNotInParentContainer_idd$u27T5azX(@NotNull SNode __thisNode__) {
    return ((Iterable<SNode>) IComponentWithRepositoryReferences__BehaviorDescriptor.findRepositoriesNotInParentContainer_idomljbxmeEv.invoke(__thisNode__, IComponentWithRepositoryReferences__BehaviorDescriptor.findParentComponentWithRepositoryReferences_idd$u27T5hnJ.invoke(__thisNode__)));
  }
  /*package*/ static Iterable<SNode> findRepositoriesNotInParentContainer_idomljbxmeEv(@NotNull SNode __thisNode__, final SNode parent) {
    return ((parent == null) ? Sequence.fromIterable(Collections.emptyList()) : Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.getRepositories_id5jZDGTileiF.invoke(__thisNode__)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.isReferencing_id5jZDGTilx5F.invoke(parent, it));
      }
    }));
  }
  /*package*/ static Iterable<SNode> findRepositoriesInParentContainer_idd$u27T5a$O(@NotNull SNode __thisNode__) {
    return ((Iterable<SNode>) IComponentWithRepositoryReferences__BehaviorDescriptor.findRepositoriesInParentContainer_idomljbxn5WH.invoke(__thisNode__, IComponentWithRepositoryReferences__BehaviorDescriptor.findParentComponentWithRepositoryReferences_idd$u27T5hnJ.invoke(__thisNode__)));
  }
  /*package*/ static Iterable<SNode> findRepositoriesInParentContainer_idomljbxn5WH(@NotNull SNode __thisNode__, final SNode parent) {
    return ((parent == null) ? Sequence.fromIterable(Collections.emptyList()) : Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.getRepositories_id5jZDGTileiF.invoke(__thisNode__)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.isReferencing_id5jZDGTilx5F.invoke(parent, it);
      }
    }));
  }
  /*package*/ static void resetChildRepositoryReferences_idd$u27T68Vq(@NotNull SNode __thisNode__) {
    Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.findChildComponentsWithRepositoryReferences_idd$u27T6o6s.invoke(__thisNode__)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        IComponentWithRepositoryReferences__BehaviorDescriptor.resetReferences_id5jZDGTikSOJ.invoke(it);
      }
    });
  }
  /*package*/ static Iterable<SNode> getReferencedRepositoriesOfChildren_idd$u27T68VE(@NotNull SNode __thisNode__) {

    return Sequence.fromIterable(IComponentWithRepositoryReferences__BehaviorDescriptor.findChildComponentsWithRepositoryReferences_idd$u27T6o6s.invoke(__thisNode__)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return (Iterable<SNode>) IComponentWithRepositoryReferences__BehaviorDescriptor.getRepositories_id5jZDGTileiF.invoke(it);
      }
    }).distinct();
  }
  /*package*/ static void mergeChildRepositoryReferences_idd$u27T68Wb(@NotNull SNode __thisNode__) {
    Iterable<SNode> repositories = IComponentWithRepositoryReferences__BehaviorDescriptor.getReferencedRepositoriesOfChildren_idd$u27T68VE.invoke(__thisNode__);
    if (Sequence.fromIterable(repositories).isEmpty()) {
      return;
    }
    IComponentWithRepositoryReferences__BehaviorDescriptor.setReferences_id5jZDGTikSRj.invoke(__thisNode__, CollectionUtils.merge(IComponentWithRepositoryReferences__BehaviorDescriptor.getRepositories_id5jZDGTileiF.invoke(__thisNode__), repositories));
  }
  /*package*/ static void resetAndMergeChildRepositoryReferences_idd$u27T68WS(@NotNull SNode __thisNode__) {
    IComponentWithRepositoryReferences__BehaviorDescriptor.mergeChildRepositoryReferences_idd$u27T68Wb.invoke(__thisNode__);
    IComponentWithRepositoryReferences__BehaviorDescriptor.resetChildRepositoryReferences_idd$u27T68Vq.invoke(__thisNode__);
    if (((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.hasReferences_id5jZDGTikSOr.invoke(__thisNode__))) {
      SPropertyOperations.set(__thisNode__, PROPS.shouldDisplayReferences$PJ7j, true);
    }
  }
  /*package*/ static void onPastedInParentComponentWithRepositoryReferences_idomljbxlS61(@NotNull SNode __thisNode__) {
    SNode parent = IComponentWithRepositoryReferences__BehaviorDescriptor.findParentComponentWithRepositoryReferences_idd$u27T5hnJ.invoke(__thisNode__);
    ConceptUtils.removeNextSiblingIfEmptyLine(__thisNode__);

    if ((parent == null)) {
      return;
    }

    if (!((boolean) IComponentWithRepositoryReferences__BehaviorDescriptor.areReferencesOnChildrenAllowed_idomljbwD$pt.invoke(parent))) {
      IComponentWithRepositoryReferences__BehaviorDescriptor.addReferences_id5jZDGTikSQJ.invoke(parent, IComponentWithRepositoryReferences__BehaviorDescriptor.findRepositoriesNotInParentContainer_idomljbxmeEv.invoke(__thisNode__, parent));
      IComponentWithRepositoryReferences__BehaviorDescriptor.showReferencesIfNotEmpty_idmdpAJOxpuA.invoke(parent);
      IComponentWithRepositoryReferences__BehaviorDescriptor.resetReferences_id5jZDGTikSOJ.invoke(__thisNode__);
      return;
    }

    IComponentWithRepositoryReferences__BehaviorDescriptor.removeReferences_id5jZDGTikSPF.invoke(__thisNode__, IComponentWithRepositoryReferences__BehaviorDescriptor.findRepositoriesInParentContainer_idomljbxn5WH.invoke(__thisNode__, parent));
    IComponentWithRepositoryReferences__BehaviorDescriptor.resetReferencesIfEmpty_id5jZDGTikSOY.invoke(__thisNode__);
  }

  /*package*/ IComponentWithRepositoryReferences__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 1:
        return (T) ((List<SNode>) getRepositoryReferences_idomljbwTthl(node));
      case 2:
        return (T) ((Iterable<SNode>) getRepositories_id5jZDGTileiF(node));
      case 3:
        return (T) ((Boolean) areReferencesOnChildrenAllowed_idomljbwD$pt(node));
      case 4:
        return (T) ((Boolean) canExecuteRequiresTransformation_idomljbxf$Pf(node, (EditorContext) parameters[0], (SNode) parameters[1]));
      case 5:
        executeRequiresTransformation_idomljbxfYaR(node, (EditorContext) parameters[0], (SNode) parameters[1]);
        return null;
      case 6:
        return (T) ((SNode) findParentComponentWithRepositoryReferences_idd$u27T5hnJ(node));
      case 7:
        return (T) ((Iterable<SNode>) findChildComponentsWithRepositoryReferences_idd$u27T6o6s(node));
      case 8:
        return (T) ((SNode) findOtherRepositoryReferenceFor_idmdpAJOdxPO(node, (SNode) parameters[0]));
      case 9:
        return (T) ((Iterable<SNode>) repositoryReferencesIncludingParent_id3fVLq_tWtGK(node));
      case 10:
        return (T) ((Iterable<SNode>) repositoryReferencesIncludingChildren_id3fVLq_tW6lG(node));
      case 11:
        return (T) ((Boolean) isReferencing_id5jZDGTikSOc(node, (SNode) parameters[0]));
      case 12:
        return (T) ((Boolean) isReferencing_id5jZDGTilx5F(node, (SNode) parameters[0]));
      case 13:
        return (T) ((Boolean) hasReferences_id5jZDGTikSOr(node));
      case 14:
        showReferencesIfNotEmpty_idmdpAJOxpuA(node);
        return null;
      case 15:
        clearReferences_id5jZDGTikSO_(node);
        return null;
      case 16:
        resetReferences_id5jZDGTikSOJ(node);
        return null;
      case 17:
        resetReferencesIfEmpty_id5jZDGTikSOY(node);
        return null;
      case 18:
        removeReference_id5jZDGTikSPa(node, (SNode) parameters[0]);
        return null;
      case 19:
        removeReference_id5jZDGTikSPw(node, (SNode) parameters[0]);
        return null;
      case 20:
        removeReferences_id5jZDGTikSPF(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 21:
        removeReferences_id5jZDGTikSQ3(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 22:
        addReference_id5jZDGTikSQn(node, (SNode) parameters[0]);
        return null;
      case 23:
        addReference_id5jZDGTikSQy(node, (SNode) parameters[0]);
        return null;
      case 24:
        addReferences_id5jZDGTikSQJ(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 25:
        addReferences_id5jZDGTikSR3(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 26:
        setReferences_id5jZDGTikSRj(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 27:
        setReferences_id5jZDGTikSRB(node, (Iterable<SNode>) parameters[0]);
        return null;
      case 28:
        return (T) ((Iterable<SNode>) findRepositoriesNotInParentContainer_idd$u27T5azX(node));
      case 29:
        return (T) ((Iterable<SNode>) findRepositoriesNotInParentContainer_idomljbxmeEv(node, (SNode) parameters[0]));
      case 30:
        return (T) ((Iterable<SNode>) findRepositoriesInParentContainer_idd$u27T5a$O(node));
      case 31:
        return (T) ((Iterable<SNode>) findRepositoriesInParentContainer_idomljbxn5WH(node, (SNode) parameters[0]));
      case 32:
        resetChildRepositoryReferences_idd$u27T68Vq(node);
        return null;
      case 33:
        return (T) ((Iterable<SNode>) getReferencedRepositoriesOfChildren_idd$u27T68VE(node));
      case 34:
        mergeChildRepositoryReferences_idd$u27T68Wb(node);
        return null;
      case 35:
        resetAndMergeChildRepositoryReferences_idd$u27T68WS(node);
        return null;
      case 36:
        onPastedInParentComponentWithRepositoryReferences_idomljbxlS61(node);
        return null;
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink repositoryReferences$PHWe = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e12ecL, 0x54ffa6ce525323c6L, "repositoryReferences");
  }

  private static final class PROPS {
    /*package*/ static final SProperty shouldDisplayReferences$PJ7j = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e12ecL, 0x54ffa6ce525323cbL, "shouldDisplayReferences");
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IComponentWithRepositoryReferences$Ob = MetaAdapterFactory.getInterfaceConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e12ecL, "CQRS.structure.IComponentWithRepositoryReferences");
  }
}
