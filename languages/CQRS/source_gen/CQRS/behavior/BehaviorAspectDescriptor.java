package CQRS.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIComponentWithNamePlaceholder__BehaviorDescriptor = new IComponentWithNamePlaceholder__BehaviorDescriptor();
  private final BHDescriptor myCommandContainer__BehaviorDescriptor = new CommandContainer__BehaviorDescriptor();
  private final BHDescriptor myGenerationSettings__BehaviorDescriptor = new GenerationSettings__BehaviorDescriptor();
  private final BHDescriptor myIGeneratorSettingsComponent__BehaviorDescriptor = new IGeneratorSettingsComponent__BehaviorDescriptor();
  private final BHDescriptor myCommandGenerationSettings__BehaviorDescriptor = new CommandGenerationSettings__BehaviorDescriptor();
  private final BHDescriptor myEventGenerationSettings__BehaviorDescriptor = new EventGenerationSettings__BehaviorDescriptor();
  private final BHDescriptor myQueryGenerationSettings__BehaviorDescriptor = new QueryGenerationSettings__BehaviorDescriptor();
  private final BHDescriptor myDescriptionLine__BehaviorDescriptor = new DescriptionLine__BehaviorDescriptor();
  private final BHDescriptor myDescription__BehaviorDescriptor = new Description__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithParameters__BehaviorDescriptor = new IComponentWithParameters__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivationRuleContainer__BehaviorDescriptor = new IDtoDerivationRuleContainer__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivationRule__BehaviorDescriptor = new IDtoDerivationRule__BehaviorDescriptor();
  private final BHDescriptor myDtoDataTypeRule__BehaviorDescriptor = new DtoDataTypeRule__BehaviorDescriptor();
  private final BHDescriptor myDtoFlatteningRule__BehaviorDescriptor = new DtoFlatteningRule__BehaviorDescriptor();
  private final BHDescriptor myDtoRepository__BehaviorDescriptor = new DtoRepository__BehaviorDescriptor();
  private final BHDescriptor myQueryMethods__BehaviorDescriptor = new QueryMethods__BehaviorDescriptor();
  private final BHDescriptor myIElementOfBoundedContext__BehaviorDescriptor = new IElementOfBoundedContext__BehaviorDescriptor();
  private final BHDescriptor myIOptionalValidIdentifierWrapper__BehaviorDescriptor = new IOptionalValidIdentifierWrapper__BehaviorDescriptor();
  private final BHDescriptor myQueryContainer__BehaviorDescriptor = new QueryContainer__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithRequiredParameters__BehaviorDescriptor = new IComponentWithRequiredParameters__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivation__BehaviorDescriptor = new IDtoDerivation__BehaviorDescriptor();
  private final BHDescriptor myDtoFlatteningRuleContainer__BehaviorDescriptor = new DtoFlatteningRuleContainer__BehaviorDescriptor();
  private final BHDescriptor myBoundedContext__BehaviorDescriptor = new BoundedContext__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivableReference__BehaviorDescriptor = new IDtoDerivableReference__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivable__BehaviorDescriptor = new IDtoDerivable__BehaviorDescriptor();
  private final BHDescriptor myIVariableReference__BehaviorDescriptor = new IVariableReference__BehaviorDescriptor();
  private final BHDescriptor myIVariable__BehaviorDescriptor = new IVariable__BehaviorDescriptor();
  private final BHDescriptor myDtoDataTypeRuleContainer__BehaviorDescriptor = new DtoDataTypeRuleContainer__BehaviorDescriptor();
  private final BHDescriptor myAggregateRoot__BehaviorDescriptor = new AggregateRoot__BehaviorDescriptor();
  private final BHDescriptor myIDataType__BehaviorDescriptor = new IDataType__BehaviorDescriptor();
  private final BHDescriptor myIPrimitiveType__BehaviorDescriptor = new IPrimitiveType__BehaviorDescriptor();
  private final BHDescriptor myLongType__BehaviorDescriptor = new LongType__BehaviorDescriptor();
  private final BHDescriptor myICollectionType__BehaviorDescriptor = new ICollectionType__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithAggregateRootRepositoryReferences__BehaviorDescriptor = new IComponentWithAggregateRootRepositoryReferences__BehaviorDescriptor();
  private final BHDescriptor myImportStatement__BehaviorDescriptor = new ImportStatement__BehaviorDescriptor();
  private final BHDescriptor myImportedType__BehaviorDescriptor = new ImportedType__BehaviorDescriptor();
  private final BHDescriptor myAggregateRootReference__BehaviorDescriptor = new AggregateRootReference__BehaviorDescriptor();
  private final BHDescriptor myValueObject__BehaviorDescriptor = new ValueObject__BehaviorDescriptor();
  private final BHDescriptor myValueObjectReference__BehaviorDescriptor = new ValueObjectReference__BehaviorDescriptor();
  private final BHDescriptor myEntity__BehaviorDescriptor = new Entity__BehaviorDescriptor();
  private final BHDescriptor myEntityReference__BehaviorDescriptor = new EntityReference__BehaviorDescriptor();
  private final BHDescriptor myDto__BehaviorDescriptor = new Dto__BehaviorDescriptor();
  private final BHDescriptor myDtoReference__BehaviorDescriptor = new DtoReference__BehaviorDescriptor();
  private final BHDescriptor myJavaDataType__BehaviorDescriptor = new JavaDataType__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithToggleableKeyword__BehaviorDescriptor = new IComponentWithToggleableKeyword__BehaviorDescriptor();
  private final BHDescriptor myIContainsComponentsWithToggleableKeywords__BehaviorDescriptor = new IContainsComponentsWithToggleableKeywords__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithRepositoryReferences__BehaviorDescriptor = new IComponentWithRepositoryReferences__BehaviorDescriptor();
  private final BHDescriptor myIRepositoryReference__BehaviorDescriptor = new IRepositoryReference__BehaviorDescriptor();
  private final BHDescriptor myIRepository__BehaviorDescriptor = new IRepository__BehaviorDescriptor();
  private final BHDescriptor myIRepositorySubstitude__BehaviorDescriptor = new IRepositorySubstitude__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlingSetting__BehaviorDescriptor = new QueryHandlingSetting__BehaviorDescriptor();
  private final BHDescriptor myQueryProcessingSetting__BehaviorDescriptor = new QueryProcessingSetting__BehaviorDescriptor();
  private final BHDescriptor myAggregateRootRepositoryReference__BehaviorDescriptor = new AggregateRootRepositoryReference__BehaviorDescriptor();
  private final BHDescriptor myIDtoDerivationRuleReference__BehaviorDescriptor = new IDtoDerivationRuleReference__BehaviorDescriptor();
  private final BHDescriptor myDtoDerivedVariableReference__BehaviorDescriptor = new DtoDerivedVariableReference__BehaviorDescriptor();
  private final BHDescriptor myIBoundedContextComponent__BehaviorDescriptor = new IBoundedContextComponent__BehaviorDescriptor();
  private final BHDescriptor myDtoRepositoryReference__BehaviorDescriptor = new DtoRepositoryReference__BehaviorDescriptor();
  private final BHDescriptor myIComponentWithDtoRepositoryReferences__BehaviorDescriptor = new IComponentWithDtoRepositoryReferences__BehaviorDescriptor();
  private final BHDescriptor myQueryContainerMethods__BehaviorDescriptor = new QueryContainerMethods__BehaviorDescriptor();
  private final BHDescriptor myParameter__BehaviorDescriptor = new Parameter__BehaviorDescriptor();
  private final BHDescriptor myParameterReference__BehaviorDescriptor = new ParameterReference__BehaviorDescriptor();
  private final BHDescriptor myProperty__BehaviorDescriptor = new Property__BehaviorDescriptor();
  private final BHDescriptor myPropertyReference__BehaviorDescriptor = new PropertyReference__BehaviorDescriptor();
  private final BHDescriptor myMethod__BehaviorDescriptor = new Method__BehaviorDescriptor();
  private final BHDescriptor myEvent__BehaviorDescriptor = new Event__BehaviorDescriptor();
  private final BHDescriptor myCommand__BehaviorDescriptor = new Command__BehaviorDescriptor();
  private final BHDescriptor myQuery__BehaviorDescriptor = new Query__BehaviorDescriptor();
  private final BHDescriptor myEventContainer__BehaviorDescriptor = new EventContainer__BehaviorDescriptor();
  private final BHDescriptor myAggregateRootRepository__BehaviorDescriptor = new AggregateRootRepository__BehaviorDescriptor();
  private final BHDescriptor myMapType__BehaviorDescriptor = new MapType__BehaviorDescriptor();
  private final BHDescriptor myDtoFlatteningRuleReference__BehaviorDescriptor = new DtoFlatteningRuleReference__BehaviorDescriptor();
  private final BHDescriptor myDtoDataTypeRuleReference__BehaviorDescriptor = new DtoDataTypeRuleReference__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAggregateRoot__BehaviorDescriptor;
      case 1:
        return myAggregateRootReference__BehaviorDescriptor;
      case 2:
        return myAggregateRootRepository__BehaviorDescriptor;
      case 3:
        return myAggregateRootRepositoryReference__BehaviorDescriptor;
      case 4:
        return myBoundedContext__BehaviorDescriptor;
      case 5:
        return myCommand__BehaviorDescriptor;
      case 6:
        return myCommandContainer__BehaviorDescriptor;
      case 7:
        return myCommandGenerationSettings__BehaviorDescriptor;
      case 8:
        return myDescription__BehaviorDescriptor;
      case 9:
        return myDescriptionLine__BehaviorDescriptor;
      case 10:
        return myDto__BehaviorDescriptor;
      case 11:
        return myDtoDataTypeRule__BehaviorDescriptor;
      case 12:
        return myDtoDataTypeRuleContainer__BehaviorDescriptor;
      case 13:
        return myDtoDataTypeRuleReference__BehaviorDescriptor;
      case 14:
        return myDtoDerivedVariableReference__BehaviorDescriptor;
      case 15:
        return myDtoFlatteningRule__BehaviorDescriptor;
      case 16:
        return myDtoFlatteningRuleContainer__BehaviorDescriptor;
      case 17:
        return myDtoFlatteningRuleReference__BehaviorDescriptor;
      case 18:
        return myDtoReference__BehaviorDescriptor;
      case 19:
        return myDtoRepository__BehaviorDescriptor;
      case 20:
        return myDtoRepositoryReference__BehaviorDescriptor;
      case 21:
        return myEntity__BehaviorDescriptor;
      case 22:
        return myEntityReference__BehaviorDescriptor;
      case 23:
        return myEvent__BehaviorDescriptor;
      case 24:
        return myEventContainer__BehaviorDescriptor;
      case 25:
        return myEventGenerationSettings__BehaviorDescriptor;
      case 26:
        return myGenerationSettings__BehaviorDescriptor;
      case 27:
        return myIBoundedContextComponent__BehaviorDescriptor;
      case 28:
        return myICollectionType__BehaviorDescriptor;
      case 29:
        return myIComponentWithAggregateRootRepositoryReferences__BehaviorDescriptor;
      case 30:
        return myIComponentWithDtoRepositoryReferences__BehaviorDescriptor;
      case 31:
        return myIComponentWithNamePlaceholder__BehaviorDescriptor;
      case 32:
        return myIComponentWithParameters__BehaviorDescriptor;
      case 33:
        return myIComponentWithRepositoryReferences__BehaviorDescriptor;
      case 34:
        return myIComponentWithRequiredParameters__BehaviorDescriptor;
      case 35:
        return myIComponentWithToggleableKeyword__BehaviorDescriptor;
      case 36:
        return myIContainsComponentsWithToggleableKeywords__BehaviorDescriptor;
      case 37:
        return myIDataType__BehaviorDescriptor;
      case 38:
        return myIDtoDerivable__BehaviorDescriptor;
      case 39:
        return myIDtoDerivableReference__BehaviorDescriptor;
      case 40:
        return myIDtoDerivation__BehaviorDescriptor;
      case 41:
        return myIDtoDerivationRule__BehaviorDescriptor;
      case 42:
        return myIDtoDerivationRuleContainer__BehaviorDescriptor;
      case 43:
        return myIDtoDerivationRuleReference__BehaviorDescriptor;
      case 44:
        return myIElementOfBoundedContext__BehaviorDescriptor;
      case 45:
        return myIGeneratorSettingsComponent__BehaviorDescriptor;
      case 46:
        return myIOptionalValidIdentifierWrapper__BehaviorDescriptor;
      case 47:
        return myIPrimitiveType__BehaviorDescriptor;
      case 48:
        return myIRepository__BehaviorDescriptor;
      case 49:
        return myIRepositoryReference__BehaviorDescriptor;
      case 50:
        return myIRepositorySubstitude__BehaviorDescriptor;
      case 51:
        return myIVariable__BehaviorDescriptor;
      case 52:
        return myIVariableReference__BehaviorDescriptor;
      case 53:
        return myImportStatement__BehaviorDescriptor;
      case 54:
        return myImportedType__BehaviorDescriptor;
      case 55:
        return myJavaDataType__BehaviorDescriptor;
      case 56:
        return myLongType__BehaviorDescriptor;
      case 57:
        return myMapType__BehaviorDescriptor;
      case 58:
        return myMethod__BehaviorDescriptor;
      case 59:
        return myParameter__BehaviorDescriptor;
      case 60:
        return myParameterReference__BehaviorDescriptor;
      case 61:
        return myProperty__BehaviorDescriptor;
      case 62:
        return myPropertyReference__BehaviorDescriptor;
      case 63:
        return myQuery__BehaviorDescriptor;
      case 64:
        return myQueryContainer__BehaviorDescriptor;
      case 65:
        return myQueryContainerMethods__BehaviorDescriptor;
      case 66:
        return myQueryGenerationSettings__BehaviorDescriptor;
      case 67:
        return myQueryHandlingSetting__BehaviorDescriptor;
      case 68:
        return myQueryMethods__BehaviorDescriptor;
      case 69:
        return myQueryProcessingSetting__BehaviorDescriptor;
      case 70:
        return myValueObject__BehaviorDescriptor;
      case 71:
        return myValueObjectReference__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c99L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8f2L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086441fb19dL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x593428614a1cdb1aL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x49ba7df3e302f916L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086440e243eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x2a075c454595567L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee293bL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e3d3397dL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e34e22efL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f903L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x12da95fb99e0f984L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910fdd145f8L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x78c544923a1c15a2L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x5d9cf3447d900a56L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x12da95fb99e0f985L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3cfd70789940548dL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x78c544923a1c15a0L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f906L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x1f11be867ab796ffL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x642187fedbd24164L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8fdL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f900L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086440e2438L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da50864411af9fL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee293eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x58d666bf1654206L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6375c6ceebab8368L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829cbdL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4dea9f2b9de68ac3L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x642187fedbd2416cL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x71e6ab661db3f2L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x62cb96433e80624L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e12ecL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3ae7d0b6d881fb45L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce4ff7203eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce5022785eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c9dL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910f901bdaeL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910f8f63541L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3cfd70789857e2b7L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x12da95fb99e0f983L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0xa84dfea8956f565L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x5d9cf3447c732a76L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x29dc78b931537cd7L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee2937L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x2dcb7cdd2f0bdc0fL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c9fL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce5255f3e5L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce505e177aL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x54ffa6ce5257488bL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910fb0ed95eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910fafca7b2L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16ea31L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8edL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x53a29a8dae148659L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829caeL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x783dbe7d5ebb3779L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643f0517eL), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ca7d84L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ec6f30L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ec6f33L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ec8131L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086440e2444L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3a4bff7934079ff4L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x642187fedcaf0c89L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x6165532e2ee2941L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x56a1ac122ac5a076L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x1f11be867afde0b7L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x56a1ac122acef4d6L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8f7L), MetaIdFactory.conceptId(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8faL)).seal();
}
