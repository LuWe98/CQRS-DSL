package CQRS.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import java.util.Objects;
import CQRS.util.CollectionUtils;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public final class AggregateRoot__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c99L, "CQRS.structure.AggregateRoot");

  public static final SMethod<SNode> toReference_id1DRRhzv4xIO = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("toReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(1907236066106153908L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> methods_id3DbZR$NYuVI = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("methods").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(4200731973481262830L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> publicMethods_id1DRRhzwmZtn = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("publicMethods").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(1907236066127771479L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> properties_id3DbZR$NYzvO = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("properties").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(4200731973481281524L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> getterProperties_id1DRRhzvhKKB = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getterProperties").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(1907236066109623335L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> hasDefinedRepository_id2Bsub$KTQ$T = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("hasDefinedRepository").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3016418587216144697L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> repository_id3AwzpICw894 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("repository").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(4152474556122038852L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> defaultRepository_id1DRRhzvbfRF = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("defaultRepository").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(1907236066107915755L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getRepositoryOrDefault_id1DRRhzvbnu8 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getRepositoryOrDefault").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(1907236066107946888L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> eventContainer_id5jZDGTfSR6V = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("eventContainer").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423280943547L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> getIdParameter_id6Yyl_4kT$ww = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getIdParameter").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(8044086790680102944L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<String> repositoryName_idmdpAJL$$QT = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("repositoryName").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(400088555706273209L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> toRepositoryReference_id5jZDGTilCJr = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("toRepositoryReference").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423322041307L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> toDtoDerivableReference_id4LpUh3T0tG4 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("toDtoDerivableReference").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(5501684678916168452L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Iterable<SNode>> getVariables_id4LpUh3V6b_Y = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getVariables").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(5501684678951221630L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(toReference_id1DRRhzv4xIO, methods_id3DbZR$NYuVI, publicMethods_id1DRRhzwmZtn, properties_id3DbZR$NYzvO, getterProperties_id1DRRhzvhKKB, hasDefinedRepository_id2Bsub$KTQ$T, repository_id3AwzpICw894, defaultRepository_id1DRRhzvbfRF, getRepositoryOrDefault_id1DRRhzvbnu8, eventContainer_id5jZDGTfSR6V, getIdParameter_id6Yyl_4kT$ww, repositoryName_idmdpAJL$$QT, toRepositoryReference_id5jZDGTilCJr, toDtoDerivableReference_id4LpUh3T0tG4, getVariables_id4LpUh3V6b_Y);

  private static void ___init___(@NotNull SNode __thisNode__) {
    SNode idParameter = SNodeFactoryOperations.createNewNode(CONCEPTS.Parameter$as, null);
    SPropertyOperations.set(idParameter, PROPS.name$MnvL, "id");
    SLinkOperations.setNewChild(idParameter, LINKS.type$AxAW, CONCEPTS.SubstitudeDataType$Hl);

    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.implicitParameters$9Wvn)).clear();
    ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.implicitParameters$9Wvn)).addElement(idParameter);
  }

  /*package*/ static SNode toReference_id1DRRhzv4xIO(@NotNull SNode __thisNode__) {
    SNode reference = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8f2L, "CQRS.structure.AggregateRootReference"));
    SLinkOperations.setTarget(reference, LINKS.aggregate$D_P$, __thisNode__);
    return reference;
  }
  /*package*/ static Iterable<SNode> methods_id3DbZR$NYuVI(@NotNull SNode __thisNode__) {
    return SNodeOperations.ofConcept(SLinkOperations.getChildren(__thisNode__, LINKS.components$A6Ik), CONCEPTS.Method$mm);
  }
  /*package*/ static Iterable<SNode> publicMethods_id1DRRhzwmZtn(@NotNull SNode __thisNode__) {
    return Sequence.fromIterable(AggregateRoot__BehaviorDescriptor.methods_id3DbZR$NYuVI.invoke(__thisNode__)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SEnumOperations.isMember(SPropertyOperations.getEnum(it, PROPS.modifier$TTVg), 0x2a075c4547294cdL);
      }
    });
  }
  /*package*/ static Iterable<SNode> properties_id3DbZR$NYzvO(@NotNull SNode __thisNode__) {
    return SNodeOperations.ofConcept(SLinkOperations.getChildren(__thisNode__, LINKS.components$A6Ik), CONCEPTS.Property$lE);
  }
  /*package*/ static Iterable<SNode> getterProperties_id1DRRhzvhKKB(@NotNull SNode __thisNode__) {
    return Sequence.fromIterable(AggregateRoot__BehaviorDescriptor.properties_id3DbZR$NYzvO.invoke(__thisNode__)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getBoolean(it, PROPS.hasGetter$MeXO);
      }
    });
  }
  /*package*/ static boolean hasDefinedRepository_id2Bsub$KTQ$T(@NotNull SNode __thisNode__) {
    return (AggregateRoot__BehaviorDescriptor.repository_id3AwzpICw894.invoke(__thisNode__) != null);
  }
  /*package*/ static SNode repository_id3AwzpICw894(@NotNull SNode __thisNode__) {
    return (SNode) BoundedContext__BehaviorDescriptor.findRepositoryFor_idawtshkwMHl.invoke(IElementOfBoundedContext__BehaviorDescriptor.boundedContext_id3VGLvhEO$iA.invoke(__thisNode__), __thisNode__);
  }
  /*package*/ static SNode defaultRepository_id1DRRhzvbfRF(@NotNull SNode __thisNode__) {
    SNode defaultRepository = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086441fb19dL, "CQRS.structure.AggregateRootRepository"));
    SPropertyOperations.set(defaultRepository, PROPS.isIdRepository$Umet, true);
    SLinkOperations.setTarget(defaultRepository, LINKS.aggregateReference$1ZNc, AggregateRoot__BehaviorDescriptor.toReference_id1DRRhzv4xIO.invoke(__thisNode__));
    return defaultRepository;
  }
  /*package*/ static SNode getRepositoryOrDefault_id1DRRhzvbnu8(@NotNull SNode __thisNode__) {
    SNode repository = AggregateRoot__BehaviorDescriptor.repository_id3AwzpICw894.invoke(__thisNode__);
    return ((repository != null) ? repository : AggregateRoot__BehaviorDescriptor.defaultRepository_id1DRRhzvbfRF.invoke(__thisNode__));
  }
  /*package*/ static SNode eventContainer_id5jZDGTfSR6V(@NotNull SNode __thisNode__) {
    return (SNode) BoundedContext__BehaviorDescriptor.findEventContainerFor_id3FBObro3aoN.invoke(IElementOfBoundedContext__BehaviorDescriptor.boundedContext_id3VGLvhEO$iA.invoke(__thisNode__), __thisNode__);
  }
  /*package*/ static SNode getIdParameter_id6Yyl_4kT$ww(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.implicitParameters$9Wvn)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return Objects.equals(SPropertyOperations.getString(it, PROPS.name$MnvL), "id");
      }
    });
  }
  /*package*/ static String repositoryName_idmdpAJL$$QT(@NotNull SNode __thisNode__) {
    SNode repository = AggregateRoot__BehaviorDescriptor.repository_id3AwzpICw894.invoke(__thisNode__);

    if ((repository == null) || !((boolean) IComponentWithNamePlaceholder__BehaviorDescriptor.isNameSet_id2RbvdOM0nGV.invoke(repository))) {
      return SPropertyOperations.getString(__thisNode__, PROPS.name$MnvL) + "Repository";
    }

    return (String) IComponentWithNamePlaceholder__BehaviorDescriptor.getName_id2RbvdOM0peT.invoke(repository);
  }
  /*package*/ static SNode toRepositoryReference_id5jZDGTilCJr(@NotNull SNode __thisNode__) {
    SNode reference = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x593428614a1cdb1aL, "CQRS.structure.AggregateRootRepositoryReference"));
    SLinkOperations.setTarget(reference, LINKS.aggregate$rv49, __thisNode__);

    // TODO Hier kann man dann auch noch eigentliche das Repository setzen

    return reference;
  }
  /*package*/ static SNode toDtoDerivableReference_id4LpUh3T0tG4(@NotNull SNode __thisNode__) {
    SNode reference = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8f2L, "CQRS.structure.AggregateRootReference"));
    SLinkOperations.setTarget(reference, LINKS.aggregate$D_P$, __thisNode__);
    return reference;
  }
  /*package*/ static Iterable<SNode> getVariables_id4LpUh3V6b_Y(@NotNull SNode __thisNode__) {
    return CollectionUtils.listOf(SLinkOperations.getChildren(__thisNode__, LINKS.parameters$t6h4), AggregateRoot__BehaviorDescriptor.properties_id3DbZR$NYzvO.invoke(__thisNode__), SLinkOperations.getChildren(__thisNode__, LINKS.implicitParameters$9Wvn));
  }

  /*package*/ AggregateRoot__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((SNode) toReference_id1DRRhzv4xIO(node));
      case 1:
        return (T) ((Iterable<SNode>) methods_id3DbZR$NYuVI(node));
      case 2:
        return (T) ((Iterable<SNode>) publicMethods_id1DRRhzwmZtn(node));
      case 3:
        return (T) ((Iterable<SNode>) properties_id3DbZR$NYzvO(node));
      case 4:
        return (T) ((Iterable<SNode>) getterProperties_id1DRRhzvhKKB(node));
      case 5:
        return (T) ((Boolean) hasDefinedRepository_id2Bsub$KTQ$T(node));
      case 6:
        return (T) ((SNode) repository_id3AwzpICw894(node));
      case 7:
        return (T) ((SNode) defaultRepository_id1DRRhzvbfRF(node));
      case 8:
        return (T) ((SNode) getRepositoryOrDefault_id1DRRhzvbnu8(node));
      case 9:
        return (T) ((SNode) eventContainer_id5jZDGTfSR6V(node));
      case 10:
        return (T) ((SNode) getIdParameter_id6Yyl_4kT$ww(node));
      case 11:
        return (T) ((String) repositoryName_idmdpAJL$$QT(node));
      case 12:
        return (T) ((SNode) toRepositoryReference_id5jZDGTilCJr(node));
      case 13:
        return (T) ((SNode) toDtoDerivableReference_id4LpUh3T0tG4(node));
      case 14:
        return (T) ((Iterable<SNode>) getVariables_id4LpUh3V6b_Y(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Parameter$as = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ca7d84L, "CQRS.structure.Parameter");
    /*package*/ static final SConcept SubstitudeDataType$Hl = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910fbf94f5aL, "CQRS.structure.SubstitudeDataType");
    /*package*/ static final SConcept Method$mm = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643f0517eL, "CQRS.structure.Method");
    /*package*/ static final SConcept Property$lE = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ec6f33L, "CQRS.structure.Property");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty modifier$TTVg = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643f0517eL, 0x2a075c4547294d8L, "modifier");
    /*package*/ static final SProperty hasGetter$MeXO = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da508643ec6f33L, 0x3a4bff79342ebf23L, "hasGetter");
    /*package*/ static final SProperty isIdRepository$Umet = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086441fb19dL, 0x73da5086441fb1a2L, "isIdRepository");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink type$AxAW = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4c59e910fb0ed95eL, 0x4c59e910fe2b0ee9L, "type");
    /*package*/ static final SContainmentLink implicitParameters$9Wvn = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c99L, 0x4c59e910fbd08c94L, "implicitParameters");
    /*package*/ static final SReferenceLink aggregate$D_P$ = MetaAdapterFactory.getReferenceLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8f2L, 0x4f0a0db9ac16f8f3L, "aggregate");
    /*package*/ static final SContainmentLink components$A6Ik = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4cfae7e929829c99L, 0x73da50864403693dL, "components");
    /*package*/ static final SContainmentLink aggregateReference$1ZNc = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086441fb19dL, 0x5e223a0a09fe3269L, "aggregateReference");
    /*package*/ static final SReferenceLink aggregate$rv49 = MetaAdapterFactory.getReferenceLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x593428614a1cdb1aL, 0x593428614a1d9431L, "aggregate");
    /*package*/ static final SContainmentLink parameters$t6h4 = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x62cb96433e80624L, 0x62cb96433e80625L, "parameters");
  }
}
