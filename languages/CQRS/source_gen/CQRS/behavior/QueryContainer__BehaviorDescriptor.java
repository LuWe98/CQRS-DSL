package CQRS.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;

public final class QueryContainer__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3a4bff7934079ff4L, "CQRS.structure.QueryContainer");

  public static final SMethod<Iterable<SNode>> queries_id5SyewCaMpun = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("queries").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6783047803578455959L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<SNode> toReference_id5jZDGThLEoa = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("toReference").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423312610826L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> containsQuery_id5A5sGroHNLV = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("containsQuery").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6450688239643081851L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<String> getQueryContainerName_id2RbvdOKU0GT = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getQueryContainerName").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3299868441429150521L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Integer> containerTypeIndex_id6gxxZVsFOkb = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("containerTypeIndex").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(7215197606718162187L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> isQueriesBlock_id6gxxZVtebNx = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isQueriesBlock").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(7215197606727171297L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> isQueryHandler_id6gxxZVted_3 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isQueryHandler").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(7215197606727178563L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> isQueryService_id6gxxZVteeje = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isQueryService").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(7215197606727181518L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<String> getPlaceholderText_id2RbvdOLeryC = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getPlaceholderText").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3299868441434503336L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<Boolean> shouldShowPlaceholder_id2RbvdOL$gIz = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("shouldShowPlaceholder").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(3299868441440226211L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();
  public static final SMethod<String> getToggleChildComponentKeywordsIntentionDescription_id5jZDGTgijt$ = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getToggleChildComponentKeywordsIntentionDescription").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6124797423287613284L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2(SMethodBuilder.createJavaParameter(Boolean.TYPE, ""));
  public static final SMethod<Boolean> areReferencesOnChildrenAllowed_idomljbwD$pt = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("areReferencesOnChildrenAllowed").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(438631690720921181L).languageId(0x9401426cad0a8857L, 0xfe04f903cef2451dL).build2();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(queries_id5SyewCaMpun, toReference_id5jZDGThLEoa, containsQuery_id5A5sGroHNLV, getQueryContainerName_id2RbvdOKU0GT, containerTypeIndex_id6gxxZVsFOkb, isQueriesBlock_id6gxxZVtebNx, isQueryHandler_id6gxxZVted_3, isQueryService_id6gxxZVteeje, getPlaceholderText_id2RbvdOLeryC, shouldShowPlaceholder_id2RbvdOL$gIz, getToggleChildComponentKeywordsIntentionDescription_id5jZDGTgijt$, areReferencesOnChildrenAllowed_idomljbwD$pt);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static Iterable<SNode> queries_id5SyewCaMpun(@NotNull SNode __thisNode__) {
    return SNodeOperations.ofConcept(SLinkOperations.getChildren(__thisNode__, LINKS.components$Au_u), CONCEPTS.Query$nF);
  }
  /*package*/ static SNode toReference_id5jZDGThLEoa(@NotNull SNode __thisNode__) {
    SNode reference = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x642187fedcaf0c8cL, "CQRS.structure.QueryContainerReference"));
    SLinkOperations.setTarget(reference, LINKS.queryContainer$onw4, __thisNode__);
    return reference;
  }
  /*package*/ static boolean containsQuery_id5A5sGroHNLV(@NotNull SNode __thisNode__, SNode query) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.components$Au_u)).contains(query);
  }
  /*package*/ static String getQueryContainerName_id2RbvdOKU0GT(@NotNull SNode __thisNode__) {
    if (((boolean) IComponentWithNamePlaceholder__BehaviorDescriptor.isNameSet_id2RbvdOM0nGV.invoke(__thisNode__))) {
      return IComponentWithNamePlaceholder__BehaviorDescriptor.getName_id2RbvdOM0peT.invoke(__thisNode__);
    }

    if (((boolean) QueryContainer__BehaviorDescriptor.isQueriesBlock_id6gxxZVtebNx.invoke(__thisNode__))) {
      return IComponentWithNamePlaceholder__BehaviorDescriptor.getPlaceholderText_id2RbvdOLeryC.invoke(__thisNode__);
    }

    return null;
  }
  /*package*/ static int containerTypeIndex_id6gxxZVsFOkb(@NotNull final SNode __thisNode__) {
    return Sequence.fromIterable(BoundedContext__BehaviorDescriptor.queryContainers_id3DbZR$O3FhA.invoke(IElementOfBoundedContext__BehaviorDescriptor.boundedContext_id3VGLvhEO$iA.invoke(__thisNode__))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getEnum(it, PROPS.type$7YBQ).equals(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ));
      }
    }).indexOf(__thisNode__) + 1;
  }
  /*package*/ static boolean isQueriesBlock_id6gxxZVtebNx(@NotNull SNode __thisNode__) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ), 0x1f11be867ad316e7L);
  }
  /*package*/ static boolean isQueryHandler_id6gxxZVted_3(@NotNull SNode __thisNode__) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ), 0x1f11be867ad316e8L);
  }
  /*package*/ static boolean isQueryService_id6gxxZVteeje(@NotNull SNode __thisNode__) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ), 0x1f11be867ad316ebL);
  }
  /*package*/ static String getPlaceholderText_id2RbvdOLeryC(@NotNull SNode __thisNode__) {
    return SEnumOperations.getMemberName0(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ)) + "_" + ((int) QueryContainer__BehaviorDescriptor.containerTypeIndex_id6gxxZVsFOkb.invoke(__thisNode__));
  }
  /*package*/ static boolean shouldShowPlaceholder_id2RbvdOL$gIz(@NotNull SNode __thisNode__) {
    return (SLinkOperations.getTarget(__thisNode__, LINKS.nameWrapper$X65Q) == null) && SEnumOperations.isMember(SPropertyOperations.getEnum(__thisNode__, PROPS.type$7YBQ), 0x1f11be867ad316e7L);
  }
  /*package*/ static String getToggleChildComponentKeywordsIntentionDescription_id5jZDGTgijt$(@NotNull SNode __thisNode__, boolean isShow) {
    return ((isShow ? "Show" : "Hide")) + " query keyword of all queries";
  }
  /*package*/ static boolean areReferencesOnChildrenAllowed_idomljbwD$pt(@NotNull SNode __thisNode__) {
    return ((boolean) QueryContainer__BehaviorDescriptor.isQueriesBlock_id6gxxZVtebNx.invoke(__thisNode__));
  }

  /*package*/ QueryContainer__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Iterable<SNode>) queries_id5SyewCaMpun(node));
      case 1:
        return (T) ((SNode) toReference_id5jZDGThLEoa(node));
      case 2:
        return (T) ((Boolean) containsQuery_id5A5sGroHNLV(node, (SNode) parameters[0]));
      case 3:
        return (T) ((String) getQueryContainerName_id2RbvdOKU0GT(node));
      case 4:
        return (T) ((Integer) containerTypeIndex_id6gxxZVsFOkb(node));
      case 5:
        return (T) ((Boolean) isQueriesBlock_id6gxxZVtebNx(node));
      case 6:
        return (T) ((Boolean) isQueryHandler_id6gxxZVted_3(node));
      case 7:
        return (T) ((Boolean) isQueryService_id6gxxZVteeje(node));
      case 8:
        return (T) ((String) getPlaceholderText_id2RbvdOLeryC(node));
      case 9:
        return (T) ((Boolean) shouldShowPlaceholder_id2RbvdOL$gIz(node));
      case 10:
        return (T) ((String) getToggleChildComponentKeywordsIntentionDescription_id5jZDGTgijt$(node, ((boolean) (Boolean) parameters[0])));
      case 11:
        return (T) ((Boolean) areReferencesOnChildrenAllowed_idomljbwD$pt(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink components$Au_u = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3a4bff7934079ff4L, 0x3a4bff793407a010L, "components");
    /*package*/ static final SReferenceLink queryContainer$onw4 = MetaAdapterFactory.getReferenceLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x642187fedcaf0c8cL, 0x642187fedcaf0c8dL, "queryContainer");
    /*package*/ static final SContainmentLink nameWrapper$X65Q = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x71e6ab661db3f2L, 0x2dcb7cdd32004e34L, "nameWrapper");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Query$nF = MetaAdapterFactory.getConcept(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086440e2444L, "CQRS.structure.Query");
  }

  private static final class PROPS {
    /*package*/ static final SProperty type$7YBQ = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x3a4bff7934079ff4L, 0x1f11be867ad316efL, "type");
  }
}
