package CQRS.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IMapping;
import org.jetbrains.mps.openapi.language.SConcept;
import java.util.Objects;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class JavaTypeQualifiedNameUtils {

  public static String getQualifiedNameOf(SNode type) {
    return getQualifiedNameOfType(SLinkOperations.getTarget(type, LINKS.actualType$WqWC));
  }

  public static String getQualifiedNameOfType(SNode type) {
    {
      final SNode classifierType = type;
      if (SNodeOperations.isInstanceOf(classifierType, CONCEPTS.ClassifierType$bL)) {
        return getQualifiedNameOfJniString(Type__BehaviorDescriptor.jniSignature_id7F81Cd2C7e3.invoke(classifierType));
      }
    }

    {
      final SNode stringType = type;
      if (SNodeOperations.isInstanceOf(stringType, CONCEPTS.StringType$uX)) {
        return getQualifiedNameOfJniString(Type__BehaviorDescriptor.jniSignature_id7F81Cd2C7e3.invoke(stringType));
      }
    }

    {
      final SNode primitiveType = type;
      if (SNodeOperations.isInstanceOf(primitiveType, CONCEPTS.PrimitiveType$sR)) {
        return getQualifiedNametOfPrimitve(primitiveType);
      }
    }

    return null;
  }

  public static String getQualifiedNametOfPrimitve(final SNode primitiveType) {
    String jniSignature = MapSequence.fromMap(JavaTypeCheckUtils.primitiveTypeMap).findFirst(new IWhereFilter<IMapping<String, SConcept>>() {
      public boolean accept(IMapping<String, SConcept> it) {
        return Objects.equals(it.value(), SNodeOperations.getConcept(primitiveType));
      }
    }).key();
    return getQualifiedNameOfJniString(jniSignature);
  }

  public static String getQualifiedNameOfJniString(String jniString) {
    if (Objects.equals(jniString, null)) {
      return null;
    }
    return (jniString.length() < 3 || !(jniString.contains("/")) ? null : jniString.substring(1, jniString.length() - 1).replace('/', '.'));
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink actualType$WqWC = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x53a29a8dae148659L, 0x53a29a8dae14865eL, "actualType");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ClassifierType$bL = MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType");
    /*package*/ static final SConcept StringType$uX = MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47da71ecL, "jetbrains.mps.baseLanguage.structure.StringType");
    /*package*/ static final SConcept PrimitiveType$sR = MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L, "jetbrains.mps.baseLanguage.structure.PrimitiveType");
  }
}
