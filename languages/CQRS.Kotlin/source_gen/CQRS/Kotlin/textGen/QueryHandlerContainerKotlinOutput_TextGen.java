package CQRS.Kotlin.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import CQRS.Generation.generation.DependencyUtils;
import CQRS.Generation.textGen.CqrsTextGenComponents;

public class QueryHandlerContainerKotlinOutput_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    String query = DependencyUtils.QUERY_INTERFACE_NAME;
    String queryHandler = DependencyUtils.QUERY_HANDLER_INTERFACE_NAME;

    KotlinTextGenComponents.header(ctx.getPrimaryInput(), ctx);

    KotlinTextGenComponents._interface(DependencyUtils.QUERY_HANDLER_CONTAINER_NAME, ctx);
    tgs.append(" {");
    CqrsTextGenComponents.newLine(ctx);
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("fun <Result> registerQueryHandler(clazz: KClass<out ");
    tgs.append(query);
    tgs.append("<Result>>, queryHandler: ");
    tgs.append(queryHandler);
    tgs.append("<out ");
    tgs.append(query);
    tgs.append("<Result>, Result>)");
    CqrsTextGenComponents.newLine(ctx);
    tgs.indent();
    tgs.append("fun unregisterQueryHandler(clazz: KClass<out ");
    tgs.append(query);
    tgs.append("<*>>)");
    CqrsTextGenComponents.newLine(ctx);
    tgs.indent();
    tgs.append("fun getRegisteredQueryHandlers(): List<");
    tgs.append(queryHandler);
    tgs.append("<");
    tgs.append(query);
    tgs.append("<*>, *>>");
    CqrsTextGenComponents.newLine(ctx);
    tgs.indent();
    tgs.append("fun <Result> findQueryHandler(clazz: KClass<out ");
    tgs.append(query);
    tgs.append("<Result>>): ");
    tgs.append(queryHandler);
    tgs.append("<");
    tgs.append(query);
    tgs.append("<Result>, Result>?");
    CqrsTextGenComponents.newLine(ctx);
    tgs.indent();
    tgs.append("fun <Result> getQueryHandler(clazz: KClass<out ");
    tgs.append(query);
    tgs.append("<Result>>): ");
    tgs.append(queryHandler);
    tgs.append("<");
    tgs.append(query);
    tgs.append("<Result>, Result> = findQueryHandler(clazz)!!");
    CqrsTextGenComponents.newLine(ctx);
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");
  }
}
