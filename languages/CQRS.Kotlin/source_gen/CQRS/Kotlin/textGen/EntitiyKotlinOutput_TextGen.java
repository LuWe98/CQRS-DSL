package CQRS.Kotlin.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import CQRS.Generation.generation.ConceptMapper;
import CQRS.Kotlin.behavior.KotlinFileOutput__BehaviorDescriptor;
import CQRS.Generation.generation.DependencyTextConverter;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import CQRS.Generation.generation.DependencyUtils;
import CQRS.Generation.textGen.CqrsTextGenComponents;
import CQRS.behavior.Entity__BehaviorDescriptor;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class EntitiyKotlinOutput_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    ConceptMapper mapper = KotlinFileOutput__BehaviorDescriptor.mapper_idSy32QQY46b.invoke(ctx.getPrimaryInput());
    DependencyTextConverter converter = KotlinFileOutput__BehaviorDescriptor.converter_id4b$xqUBeLAT.invoke(ctx.getPrimaryInput());
    SNode entity = SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.entity$OPtA);
    String idType = converter.convertType(SLinkOperations.getTarget(entity, LINKS.idType$P983));

    KotlinTextGenComponents.header(ctx.getPrimaryInput(), ctx);

    KotlinTextGenComponents._class(SPropertyOperations.getString(entity, PROPS.name$MnvL), ctx);
    tgs.append("(");
    ctx.getBuffer().area().increaseIndent();
    KotlinTextGenComponents.parameters(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.parameters$j0A8), SPropertyOperations.getBoolean(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.entity$OPtA), PROPS.hasVerticallyAlignedParameters$KOTx), ctx);
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("): ");
    tgs.append(DependencyUtils.ENTITY_BASE_CLASS_NAME);
    tgs.append("<");
    tgs.append(idType);
    tgs.append(">(id) {");
    CqrsTextGenComponents.newLines(2, ctx);

    ctx.getBuffer().area().increaseIndent();
    KotlinTextGenComponents.properties(Entity__BehaviorDescriptor.properties_id3DbZR$NYkue.invoke(entity), mapper, ctx);
    KotlinTextGenComponents.methods(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.methods$j5Ku), ctx);
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");

  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink entity$OPtA = MetaAdapterFactory.getReferenceLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea749033fL, 0x42e485aea7490342L, "entity");
    /*package*/ static final SContainmentLink idType$P983 = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x4f0a0db9ac16f8fdL, 0x73da508643ec8188L, "idType");
    /*package*/ static final SContainmentLink parameters$j0A8 = MetaAdapterFactory.getContainmentLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea749033fL, 0x6443e253c9084a5L, "parameters");
    /*package*/ static final SContainmentLink methods$j5Ku = MetaAdapterFactory.getContainmentLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea749033fL, 0x6443e253c9084a6L, "methods");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty hasVerticallyAlignedParameters$KOTx = MetaAdapterFactory.getProperty(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x62cb96433e80624L, 0x3ae7d0b6d87bc75fL, "hasVerticallyAlignedParameters");
  }
}
