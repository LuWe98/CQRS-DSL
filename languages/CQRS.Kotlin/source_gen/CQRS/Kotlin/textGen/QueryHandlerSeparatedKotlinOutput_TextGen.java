package CQRS.Kotlin.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import CQRS.Generation.generation.DependencyTextConverter;
import CQRS.Kotlin.behavior.KotlinFileOutput__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import CQRS.Generation.generation.DependencyUtils;
import CQRS.Generation.textGen.CqrsTextGenComponents;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class QueryHandlerSeparatedKotlinOutput_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    DependencyTextConverter converter = KotlinFileOutput__BehaviorDescriptor.converter_id4b$xqUBeLAT.invoke(ctx.getPrimaryInput());
    String queryString = converter.convertQuery(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.query$ysaA));
    String returnValueString = converter.convertType(SLinkOperations.getTarget(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.query$ysaA), LINKS.returnType$WTqX));

    KotlinTextGenComponents.header(ctx.getPrimaryInput(), ctx);

    KotlinTextGenComponents._class(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.query$ysaA), PROPS.name$MnvL) + "Handler", ctx);
    tgs.append("(");
    ctx.getBuffer().area().increaseIndent();
    KotlinTextGenComponents.verticalParameters(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.parameters$FrbZ), ctx);
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("): ");
    tgs.append(DependencyUtils.QUERY_HANDLER_INTERFACE_NAME);
    tgs.append("<");
    tgs.append(queryString);
    tgs.append(", ");
    tgs.append(returnValueString);
    tgs.append("> {");
    CqrsTextGenComponents.newLines(2, ctx);

    ctx.getBuffer().area().increaseIndent();
    KotlinTextGenComponents.methods(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.methods$ysCC), ctx);
    ctx.getBuffer().area().decreaseIndent();

    tgs.append("}");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink query$ysaA = MetaAdapterFactory.getReferenceLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18db1da0fbL, 0x1a77dd18db1da0feL, "query");
    /*package*/ static final SContainmentLink returnType$WTqX = MetaAdapterFactory.getContainmentLink(0xfe04f903cef2451dL, 0x9401426cad0a8857L, 0x73da5086440e2444L, 0x3a4bff79340ab979L, "returnType");
    /*package*/ static final SContainmentLink parameters$FrbZ = MetaAdapterFactory.getContainmentLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18db1da0fbL, 0x33fbc5a97479e82fL, "parameters");
    /*package*/ static final SContainmentLink methods$ysCC = MetaAdapterFactory.getContainmentLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18db1da0fbL, 0x1a77dd18db1da100L, "methods");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
