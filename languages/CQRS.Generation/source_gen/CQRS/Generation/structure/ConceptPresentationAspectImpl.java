package CQRS.Generation.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AggregateConcreteInterfaceOutput;
  private ConceptPresentation props_AggregateConcreteRepositoryInterfaceOutput;
  private ConceptPresentation props_AggregateIdRepositoryInterfaceOutput;
  private ConceptPresentation props_AggregateInterfaceOutput;
  private ConceptPresentation props_AggregateOutput;
  private ConceptPresentation props_AggregateRepositoryInterfaceOutput;
  private ConceptPresentation props_AggregateRepositoryOutput;
  private ConceptPresentation props_ClassConcept;
  private ConceptPresentation props_CommandHandlerGroupedInterfaceOutput;
  private ConceptPresentation props_CommandHandlerGroupedOutput;
  private ConceptPresentation props_CommandHandlerInterfaceOutput;
  private ConceptPresentation props_CommandHandlerSeparatedOutput;
  private ConceptPresentation props_CommandInterfaceOutput;
  private ConceptPresentation props_CommandOutput;
  private ConceptPresentation props_CommandWrapperInterfaceOutput;
  private ConceptPresentation props_ComponentOutput;
  private ConceptPresentation props_DtoOutput;
  private ConceptPresentation props_DtoRepositoryInterfaceOutput;
  private ConceptPresentation props_DtoRepositoryOutput;
  private ConceptPresentation props_ElementOutput;
  private ConceptPresentation props_EntityBaseClassOutput;
  private ConceptPresentation props_EntityOutput;
  private ConceptPresentation props_EventAggregateBaseClassOutput;
  private ConceptPresentation props_EventAggregateInterfaceOutput;
  private ConceptPresentation props_EventHandlerGroupedInterfaceOutput;
  private ConceptPresentation props_EventHandlerGroupedOutput;
  private ConceptPresentation props_EventHandlerInterfaceOutput;
  private ConceptPresentation props_EventHandlerSeparatedOutput;
  private ConceptPresentation props_EventInterfaceOutput;
  private ConceptPresentation props_EventOutput;
  private ConceptPresentation props_EventWrapperInterfaceOutput;
  private ConceptPresentation props_FileConcept;
  private ConceptPresentation props_FileOutput;
  private ConceptPresentation props_IDataTypeOutput;
  private ConceptPresentation props_MethodOutput;
  private ConceptPresentation props_ParameterOutput;
  private ConceptPresentation props_PropertyOutput;
  private ConceptPresentation props_QueryHandlerContainerImplOutput;
  private ConceptPresentation props_QueryHandlerContainerOutput;
  private ConceptPresentation props_QueryHandlerGroupedInterfaceOutput;
  private ConceptPresentation props_QueryHandlerGroupedOutput;
  private ConceptPresentation props_QueryHandlerInterfaceOutput;
  private ConceptPresentation props_QueryHandlerSeparatedOutput;
  private ConceptPresentation props_QueryInterfaceOutput;
  private ConceptPresentation props_QueryOutput;
  private ConceptPresentation props_QueryProcessorImplOutput;
  private ConceptPresentation props_QueryProcessorOutput;
  private ConceptPresentation props_ValueObjectOutput;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AggregateConcreteInterfaceOutput:
        if (props_AggregateConcreteInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AggregateConcreteInterfaceOutput");
          props_AggregateConcreteInterfaceOutput = cpb.create();
        }
        return props_AggregateConcreteInterfaceOutput;
      case LanguageConceptSwitch.AggregateConcreteRepositoryInterfaceOutput:
        if (props_AggregateConcreteRepositoryInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AggregateConcreteRepositoryInterfaceOutput");
          props_AggregateConcreteRepositoryInterfaceOutput = cpb.create();
        }
        return props_AggregateConcreteRepositoryInterfaceOutput;
      case LanguageConceptSwitch.AggregateIdRepositoryInterfaceOutput:
        if (props_AggregateIdRepositoryInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_AggregateIdRepositoryInterfaceOutput = cpb.create();
        }
        return props_AggregateIdRepositoryInterfaceOutput;
      case LanguageConceptSwitch.AggregateInterfaceOutput:
        if (props_AggregateInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_AggregateInterfaceOutput = cpb.create();
        }
        return props_AggregateInterfaceOutput;
      case LanguageConceptSwitch.AggregateOutput:
        if (props_AggregateOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AggregateOutput");
          props_AggregateOutput = cpb.create();
        }
        return props_AggregateOutput;
      case LanguageConceptSwitch.AggregateRepositoryInterfaceOutput:
        if (props_AggregateRepositoryInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_AggregateRepositoryInterfaceOutput = cpb.create();
        }
        return props_AggregateRepositoryInterfaceOutput;
      case LanguageConceptSwitch.AggregateRepositoryOutput:
        if (props_AggregateRepositoryOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AggregateRepositoryOutput");
          props_AggregateRepositoryOutput = cpb.create();
        }
        return props_AggregateRepositoryOutput;
      case LanguageConceptSwitch.ClassConcept:
        if (props_ClassConcept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ClassConcept");
          props_ClassConcept = cpb.create();
        }
        return props_ClassConcept;
      case LanguageConceptSwitch.CommandHandlerGroupedInterfaceOutput:
        if (props_CommandHandlerGroupedInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CommandHandlerGroupedInterfaceOutput");
          props_CommandHandlerGroupedInterfaceOutput = cpb.create();
        }
        return props_CommandHandlerGroupedInterfaceOutput;
      case LanguageConceptSwitch.CommandHandlerGroupedOutput:
        if (props_CommandHandlerGroupedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CommandHandlerGroupedOutput");
          props_CommandHandlerGroupedOutput = cpb.create();
        }
        return props_CommandHandlerGroupedOutput;
      case LanguageConceptSwitch.CommandHandlerInterfaceOutput:
        if (props_CommandHandlerInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_CommandHandlerInterfaceOutput = cpb.create();
        }
        return props_CommandHandlerInterfaceOutput;
      case LanguageConceptSwitch.CommandHandlerSeparatedOutput:
        if (props_CommandHandlerSeparatedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CommandHandlerSeparatedOutput");
          props_CommandHandlerSeparatedOutput = cpb.create();
        }
        return props_CommandHandlerSeparatedOutput;
      case LanguageConceptSwitch.CommandInterfaceOutput:
        if (props_CommandInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_CommandInterfaceOutput = cpb.create();
        }
        return props_CommandInterfaceOutput;
      case LanguageConceptSwitch.CommandOutput:
        if (props_CommandOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CommandOutput");
          props_CommandOutput = cpb.create();
        }
        return props_CommandOutput;
      case LanguageConceptSwitch.CommandWrapperInterfaceOutput:
        if (props_CommandWrapperInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_CommandWrapperInterfaceOutput = cpb.create();
        }
        return props_CommandWrapperInterfaceOutput;
      case LanguageConceptSwitch.ComponentOutput:
        if (props_ComponentOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ComponentOutput = cpb.create();
        }
        return props_ComponentOutput;
      case LanguageConceptSwitch.DtoOutput:
        if (props_DtoOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DtoOutput");
          props_DtoOutput = cpb.create();
        }
        return props_DtoOutput;
      case LanguageConceptSwitch.DtoRepositoryInterfaceOutput:
        if (props_DtoRepositoryInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DtoRepositoryInterfaceOutput");
          props_DtoRepositoryInterfaceOutput = cpb.create();
        }
        return props_DtoRepositoryInterfaceOutput;
      case LanguageConceptSwitch.DtoRepositoryOutput:
        if (props_DtoRepositoryOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DtoRepositoryOutput");
          props_DtoRepositoryOutput = cpb.create();
        }
        return props_DtoRepositoryOutput;
      case LanguageConceptSwitch.ElementOutput:
        if (props_ElementOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ElementOutput = cpb.create();
        }
        return props_ElementOutput;
      case LanguageConceptSwitch.EntityBaseClassOutput:
        if (props_EntityBaseClassOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EntityBaseClassOutput = cpb.create();
        }
        return props_EntityBaseClassOutput;
      case LanguageConceptSwitch.EntityOutput:
        if (props_EntityOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EntityOutput");
          props_EntityOutput = cpb.create();
        }
        return props_EntityOutput;
      case LanguageConceptSwitch.EventAggregateBaseClassOutput:
        if (props_EventAggregateBaseClassOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventAggregateBaseClassOutput = cpb.create();
        }
        return props_EventAggregateBaseClassOutput;
      case LanguageConceptSwitch.EventAggregateInterfaceOutput:
        if (props_EventAggregateInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventAggregateInterfaceOutput = cpb.create();
        }
        return props_EventAggregateInterfaceOutput;
      case LanguageConceptSwitch.EventHandlerGroupedInterfaceOutput:
        if (props_EventHandlerGroupedInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventHandlerGroupedInterfaceOutput = cpb.create();
        }
        return props_EventHandlerGroupedInterfaceOutput;
      case LanguageConceptSwitch.EventHandlerGroupedOutput:
        if (props_EventHandlerGroupedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventHandlerGroupedOutput = cpb.create();
        }
        return props_EventHandlerGroupedOutput;
      case LanguageConceptSwitch.EventHandlerInterfaceOutput:
        if (props_EventHandlerInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventHandlerInterfaceOutput = cpb.create();
        }
        return props_EventHandlerInterfaceOutput;
      case LanguageConceptSwitch.EventHandlerSeparatedOutput:
        if (props_EventHandlerSeparatedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EventHandlerSeparatedOutput");
          props_EventHandlerSeparatedOutput = cpb.create();
        }
        return props_EventHandlerSeparatedOutput;
      case LanguageConceptSwitch.EventInterfaceOutput:
        if (props_EventInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventInterfaceOutput = cpb.create();
        }
        return props_EventInterfaceOutput;
      case LanguageConceptSwitch.EventOutput:
        if (props_EventOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EventOutput");
          props_EventOutput = cpb.create();
        }
        return props_EventOutput;
      case LanguageConceptSwitch.EventWrapperInterfaceOutput:
        if (props_EventWrapperInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_EventWrapperInterfaceOutput = cpb.create();
        }
        return props_EventWrapperInterfaceOutput;
      case LanguageConceptSwitch.FileConcept:
        if (props_FileConcept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("FileConcept");
          props_FileConcept = cpb.create();
        }
        return props_FileConcept;
      case LanguageConceptSwitch.FileOutput:
        if (props_FileOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_FileOutput = cpb.create();
        }
        return props_FileOutput;
      case LanguageConceptSwitch.IDataTypeOutput:
        if (props_IDataTypeOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IDataTypeOutput");
          props_IDataTypeOutput = cpb.create();
        }
        return props_IDataTypeOutput;
      case LanguageConceptSwitch.MethodOutput:
        if (props_MethodOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MethodOutput");
          props_MethodOutput = cpb.create();
        }
        return props_MethodOutput;
      case LanguageConceptSwitch.ParameterOutput:
        if (props_ParameterOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ParameterOutput");
          props_ParameterOutput = cpb.create();
        }
        return props_ParameterOutput;
      case LanguageConceptSwitch.PropertyOutput:
        if (props_PropertyOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PropertyOutput");
          props_PropertyOutput = cpb.create();
        }
        return props_PropertyOutput;
      case LanguageConceptSwitch.QueryHandlerContainerImplOutput:
        if (props_QueryHandlerContainerImplOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryHandlerContainerImplOutput = cpb.create();
        }
        return props_QueryHandlerContainerImplOutput;
      case LanguageConceptSwitch.QueryHandlerContainerOutput:
        if (props_QueryHandlerContainerOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryHandlerContainerOutput = cpb.create();
        }
        return props_QueryHandlerContainerOutput;
      case LanguageConceptSwitch.QueryHandlerGroupedInterfaceOutput:
        if (props_QueryHandlerGroupedInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("QueryHandlerGroupedInterfaceOutput");
          props_QueryHandlerGroupedInterfaceOutput = cpb.create();
        }
        return props_QueryHandlerGroupedInterfaceOutput;
      case LanguageConceptSwitch.QueryHandlerGroupedOutput:
        if (props_QueryHandlerGroupedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("QueryHandlerGroupedOutput");
          props_QueryHandlerGroupedOutput = cpb.create();
        }
        return props_QueryHandlerGroupedOutput;
      case LanguageConceptSwitch.QueryHandlerInterfaceOutput:
        if (props_QueryHandlerInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryHandlerInterfaceOutput = cpb.create();
        }
        return props_QueryHandlerInterfaceOutput;
      case LanguageConceptSwitch.QueryHandlerSeparatedOutput:
        if (props_QueryHandlerSeparatedOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("QueryHandlerSeparatedOutput");
          props_QueryHandlerSeparatedOutput = cpb.create();
        }
        return props_QueryHandlerSeparatedOutput;
      case LanguageConceptSwitch.QueryInterfaceOutput:
        if (props_QueryInterfaceOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryInterfaceOutput = cpb.create();
        }
        return props_QueryInterfaceOutput;
      case LanguageConceptSwitch.QueryOutput:
        if (props_QueryOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("QueryOutput");
          props_QueryOutput = cpb.create();
        }
        return props_QueryOutput;
      case LanguageConceptSwitch.QueryProcessorImplOutput:
        if (props_QueryProcessorImplOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryProcessorImplOutput = cpb.create();
        }
        return props_QueryProcessorImplOutput;
      case LanguageConceptSwitch.QueryProcessorOutput:
        if (props_QueryProcessorOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext", "", "");
          props_QueryProcessorOutput = cpb.create();
        }
        return props_QueryProcessorOutput;
      case LanguageConceptSwitch.ValueObjectOutput:
        if (props_ValueObjectOutput == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ValueObjectOutput");
          props_ValueObjectOutput = cpb.create();
        }
        return props_ValueObjectOutput;
    }
    return null;
  }
}
