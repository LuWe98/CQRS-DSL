package CQRS.Generation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AggregateConcreteInterfaceOutput = 0;
  public static final int AggregateConcreteRepositoryInterfaceOutput = 1;
  public static final int AggregateIdRepositoryInterfaceOutput = 2;
  public static final int AggregateInterfaceOutput = 3;
  public static final int AggregateOutput = 4;
  public static final int AggregateRepositoryInterfaceOutput = 5;
  public static final int AggregateRepositoryOutput = 6;
  public static final int ClassConcept = 7;
  public static final int CommandHandlerGroupedInterfaceOutput = 8;
  public static final int CommandHandlerGroupedOutput = 9;
  public static final int CommandHandlerInterfaceOutput = 10;
  public static final int CommandHandlerSeparatedOutput = 11;
  public static final int CommandInterfaceOutput = 12;
  public static final int CommandOutput = 13;
  public static final int CommandWrapperInterfaceOutput = 14;
  public static final int ComponentOutput = 15;
  public static final int DtoOutput = 16;
  public static final int DtoRepositoryInterfaceOutput = 17;
  public static final int DtoRepositoryOutput = 18;
  public static final int ElementOutput = 19;
  public static final int EntityBaseClassOutput = 20;
  public static final int EntityOutput = 21;
  public static final int EventAggregateBaseClassOutput = 22;
  public static final int EventAggregateInterfaceOutput = 23;
  public static final int EventHandlerGroupedInterfaceOutput = 24;
  public static final int EventHandlerGroupedOutput = 25;
  public static final int EventHandlerInterfaceOutput = 26;
  public static final int EventHandlerSeparatedOutput = 27;
  public static final int EventInterfaceOutput = 28;
  public static final int EventOutput = 29;
  public static final int EventWrapperInterfaceOutput = 30;
  public static final int FileConcept = 31;
  public static final int FileOutput = 32;
  public static final int IDataTypeOutput = 33;
  public static final int MethodOutput = 34;
  public static final int ParameterOutput = 35;
  public static final int PropertyOutput = 36;
  public static final int QueryHandlerContainerImplOutput = 37;
  public static final int QueryHandlerContainerOutput = 38;
  public static final int QueryHandlerGroupedInterfaceOutput = 39;
  public static final int QueryHandlerGroupedOutput = 40;
  public static final int QueryHandlerInterfaceOutput = 41;
  public static final int QueryHandlerSeparatedOutput = 42;
  public static final int QueryInterfaceOutput = 43;
  public static final int QueryOutput = 44;
  public static final int QueryProcessorImplOutput = 45;
  public static final int QueryProcessorOutput = 46;
  public static final int ValueObjectOutput = 47;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x273bc31819694c83L, 0x8484525ea753e78bL);
    builder.put(0x1a77dd18dc10802cL, AggregateConcreteInterfaceOutput);
    builder.put(0x1a77dd18de31fc1eL, AggregateConcreteRepositoryInterfaceOutput);
    builder.put(0x1a77dd18de31fc1cL, AggregateIdRepositoryInterfaceOutput);
    builder.put(0xe220c2db707352eL, AggregateInterfaceOutput);
    builder.put(0x42e485aea7491039L, AggregateOutput);
    builder.put(0x1a77dd18de31fc1bL, AggregateRepositoryInterfaceOutput);
    builder.put(0x1a77dd18de31fc1dL, AggregateRepositoryOutput);
    builder.put(0x1aadd00b89c77d9L, ClassConcept);
    builder.put(0x33fbc5a959da566bL, CommandHandlerGroupedInterfaceOutput);
    builder.put(0x33fbc5a9591d98baL, CommandHandlerGroupedOutput);
    builder.put(0x42e485aea780bf2fL, CommandHandlerInterfaceOutput);
    builder.put(0x2cd995488ae1ebf3L, CommandHandlerSeparatedOutput);
    builder.put(0x42e485aea780bf2eL, CommandInterfaceOutput);
    builder.put(0x42e485aea75e79ccL, CommandOutput);
    builder.put(0x7849637c48be76e0L, CommandWrapperInterfaceOutput);
    builder.put(0x2cd995488a0177afL, ComponentOutput);
    builder.put(0x42e485aea742a568L, DtoOutput);
    builder.put(0x33fbc5a971798ebdL, DtoRepositoryInterfaceOutput);
    builder.put(0x33fbc5a971798ebaL, DtoRepositoryOutput);
    builder.put(0x607c1e67c05d152aL, ElementOutput);
    builder.put(0x1aadd00b90a297fL, EntityBaseClassOutput);
    builder.put(0x42e485aea749033fL, EntityOutput);
    builder.put(0x2cd995488a09774fL, EventAggregateBaseClassOutput);
    builder.put(0xe220c2db7073531L, EventAggregateInterfaceOutput);
    builder.put(0x33fbc5a9664da00cL, EventHandlerGroupedInterfaceOutput);
    builder.put(0x1a77dd18dbbe5dd0L, EventHandlerGroupedOutput);
    builder.put(0xe220c2db6f921b9L, EventHandlerInterfaceOutput);
    builder.put(0x1a77dd18daf28d4eL, EventHandlerSeparatedOutput);
    builder.put(0xe220c2db6f921b8L, EventInterfaceOutput);
    builder.put(0x42e485aea772864aL, EventOutput);
    builder.put(0x1a77dd18db67c7adL, EventWrapperInterfaceOutput);
    builder.put(0x1aadd00b89c5fccL, FileConcept);
    builder.put(0xa1fc5d1dac8b627L, FileOutput);
    builder.put(0x48bafb85c0476f12L, IDataTypeOutput);
    builder.put(0x607c1e67c05d1524L, MethodOutput);
    builder.put(0x48bafb85c0476b22L, ParameterOutput);
    builder.put(0x1a77dd18dd171b74L, PropertyOutput);
    builder.put(0x7849637c48cd1e4aL, QueryHandlerContainerImplOutput);
    builder.put(0x7849637c48cd1e46L, QueryHandlerContainerOutput);
    builder.put(0x33fbc5a96964f0a4L, QueryHandlerGroupedInterfaceOutput);
    builder.put(0x33fbc5a96964f0a3L, QueryHandlerGroupedOutput);
    builder.put(0xe220c2db6fdd73aL, QueryHandlerInterfaceOutput);
    builder.put(0x1a77dd18db1da0fbL, QueryHandlerSeparatedOutput);
    builder.put(0x3b1b6680cf077f78L, QueryInterfaceOutput);
    builder.put(0xa1fc5d1dac8a772L, QueryOutput);
    builder.put(0x7849637c48cd1e4dL, QueryProcessorImplOutput);
    builder.put(0x7849637c48cd1e42L, QueryProcessorOutput);
    builder.put(0x42e485aea747fb3aL, ValueObjectOutput);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
