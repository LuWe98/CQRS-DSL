package CQRS.Generation.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myEntityBaseClassOutput__BehaviorDescriptor = new EntityBaseClassOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryOutput__BehaviorDescriptor = new QueryOutput__BehaviorDescriptor();
  private final BHDescriptor myFileOutput__BehaviorDescriptor = new FileOutput__BehaviorDescriptor();
  private final BHDescriptor myEventInterfaceOutput__BehaviorDescriptor = new EventInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myEventHandlerInterfaceOutput__BehaviorDescriptor = new EventHandlerInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerInterfaceOutput__BehaviorDescriptor = new QueryHandlerInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateInterfaceOutput__BehaviorDescriptor = new AggregateInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myEventAggregateInterfaceOutput__BehaviorDescriptor = new EventAggregateInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myEventHandlerSeparatedOutput__BehaviorDescriptor = new EventHandlerSeparatedOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerSeparatedOutput__BehaviorDescriptor = new QueryHandlerSeparatedOutput__BehaviorDescriptor();
  private final BHDescriptor myEventWrapperInterfaceOutput__BehaviorDescriptor = new EventWrapperInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myEventHandlerGroupedOutput__BehaviorDescriptor = new EventHandlerGroupedOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateConcreteInterfaceOutput__BehaviorDescriptor = new AggregateConcreteInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateRepositoryInterfaceOutput__BehaviorDescriptor = new AggregateRepositoryInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateIdRepositoryInterfaceOutput__BehaviorDescriptor = new AggregateIdRepositoryInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateRepositoryOutput__BehaviorDescriptor = new AggregateRepositoryOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateConcreteRepositoryInterfaceOutput__BehaviorDescriptor = new AggregateConcreteRepositoryInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myComponentOutput__BehaviorDescriptor = new ComponentOutput__BehaviorDescriptor();
  private final BHDescriptor myEventAggregateBaseClassOutput__BehaviorDescriptor = new EventAggregateBaseClassOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandHandlerSeparatedOutput__BehaviorDescriptor = new CommandHandlerSeparatedOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandHandlerGroupedOutput__BehaviorDescriptor = new CommandHandlerGroupedOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandHandlerGroupedInterfaceOutput__BehaviorDescriptor = new CommandHandlerGroupedInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myEventHandlerGroupedInterfaceOutput__BehaviorDescriptor = new EventHandlerGroupedInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerGroupedOutput__BehaviorDescriptor = new QueryHandlerGroupedOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerGroupedInterfaceOutput__BehaviorDescriptor = new QueryHandlerGroupedInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myDtoRepositoryOutput__BehaviorDescriptor = new DtoRepositoryOutput__BehaviorDescriptor();
  private final BHDescriptor myDtoRepositoryInterfaceOutput__BehaviorDescriptor = new DtoRepositoryInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryInterfaceOutput__BehaviorDescriptor = new QueryInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myDtoOutput__BehaviorDescriptor = new DtoOutput__BehaviorDescriptor();
  private final BHDescriptor myValueObjectOutput__BehaviorDescriptor = new ValueObjectOutput__BehaviorDescriptor();
  private final BHDescriptor myEntityOutput__BehaviorDescriptor = new EntityOutput__BehaviorDescriptor();
  private final BHDescriptor myAggregateOutput__BehaviorDescriptor = new AggregateOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandOutput__BehaviorDescriptor = new CommandOutput__BehaviorDescriptor();
  private final BHDescriptor myEventOutput__BehaviorDescriptor = new EventOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandInterfaceOutput__BehaviorDescriptor = new CommandInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandHandlerInterfaceOutput__BehaviorDescriptor = new CommandHandlerInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myMethodOutput__BehaviorDescriptor = new MethodOutput__BehaviorDescriptor();
  private final BHDescriptor myElementOutput__BehaviorDescriptor = new ElementOutput__BehaviorDescriptor();
  private final BHDescriptor myCommandWrapperInterfaceOutput__BehaviorDescriptor = new CommandWrapperInterfaceOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryProcessorOutput__BehaviorDescriptor = new QueryProcessorOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerContainerOutput__BehaviorDescriptor = new QueryHandlerContainerOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryHandlerContainerImplOutput__BehaviorDescriptor = new QueryHandlerContainerImplOutput__BehaviorDescriptor();
  private final BHDescriptor myQueryProcessorImplOutput__BehaviorDescriptor = new QueryProcessorImplOutput__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAggregateConcreteInterfaceOutput__BehaviorDescriptor;
      case 1:
        return myAggregateConcreteRepositoryInterfaceOutput__BehaviorDescriptor;
      case 2:
        return myAggregateIdRepositoryInterfaceOutput__BehaviorDescriptor;
      case 3:
        return myAggregateInterfaceOutput__BehaviorDescriptor;
      case 4:
        return myAggregateOutput__BehaviorDescriptor;
      case 5:
        return myAggregateRepositoryInterfaceOutput__BehaviorDescriptor;
      case 6:
        return myAggregateRepositoryOutput__BehaviorDescriptor;
      case 7:
        return myCommandHandlerGroupedInterfaceOutput__BehaviorDescriptor;
      case 8:
        return myCommandHandlerGroupedOutput__BehaviorDescriptor;
      case 9:
        return myCommandHandlerInterfaceOutput__BehaviorDescriptor;
      case 10:
        return myCommandHandlerSeparatedOutput__BehaviorDescriptor;
      case 11:
        return myCommandInterfaceOutput__BehaviorDescriptor;
      case 12:
        return myCommandOutput__BehaviorDescriptor;
      case 13:
        return myCommandWrapperInterfaceOutput__BehaviorDescriptor;
      case 14:
        return myComponentOutput__BehaviorDescriptor;
      case 15:
        return myDtoOutput__BehaviorDescriptor;
      case 16:
        return myDtoRepositoryInterfaceOutput__BehaviorDescriptor;
      case 17:
        return myDtoRepositoryOutput__BehaviorDescriptor;
      case 18:
        return myElementOutput__BehaviorDescriptor;
      case 19:
        return myEntityBaseClassOutput__BehaviorDescriptor;
      case 20:
        return myEntityOutput__BehaviorDescriptor;
      case 21:
        return myEventAggregateBaseClassOutput__BehaviorDescriptor;
      case 22:
        return myEventAggregateInterfaceOutput__BehaviorDescriptor;
      case 23:
        return myEventHandlerGroupedInterfaceOutput__BehaviorDescriptor;
      case 24:
        return myEventHandlerGroupedOutput__BehaviorDescriptor;
      case 25:
        return myEventHandlerInterfaceOutput__BehaviorDescriptor;
      case 26:
        return myEventHandlerSeparatedOutput__BehaviorDescriptor;
      case 27:
        return myEventInterfaceOutput__BehaviorDescriptor;
      case 28:
        return myEventOutput__BehaviorDescriptor;
      case 29:
        return myEventWrapperInterfaceOutput__BehaviorDescriptor;
      case 30:
        return myFileOutput__BehaviorDescriptor;
      case 31:
        return myMethodOutput__BehaviorDescriptor;
      case 32:
        return myQueryHandlerContainerImplOutput__BehaviorDescriptor;
      case 33:
        return myQueryHandlerContainerOutput__BehaviorDescriptor;
      case 34:
        return myQueryHandlerGroupedInterfaceOutput__BehaviorDescriptor;
      case 35:
        return myQueryHandlerGroupedOutput__BehaviorDescriptor;
      case 36:
        return myQueryHandlerInterfaceOutput__BehaviorDescriptor;
      case 37:
        return myQueryHandlerSeparatedOutput__BehaviorDescriptor;
      case 38:
        return myQueryInterfaceOutput__BehaviorDescriptor;
      case 39:
        return myQueryOutput__BehaviorDescriptor;
      case 40:
        return myQueryProcessorImplOutput__BehaviorDescriptor;
      case 41:
        return myQueryProcessorOutput__BehaviorDescriptor;
      case 42:
        return myValueObjectOutput__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18dc10802cL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18de31fc1eL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18de31fc1cL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xe220c2db707352eL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea7491039L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18de31fc1bL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18de31fc1dL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a959da566bL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a9591d98baL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea780bf2fL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488ae1ebf3L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea780bf2eL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea75e79ccL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x7849637c48be76e0L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea742a568L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a971798ebdL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a971798ebaL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x607c1e67c05d152aL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1aadd00b90a297fL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea749033fL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a09774fL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xe220c2db7073531L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a9664da00cL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18dbbe5dd0L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xe220c2db6f921b9L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18daf28d4eL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xe220c2db6f921b8L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea772864aL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18db67c7adL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xa1fc5d1dac8b627L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x607c1e67c05d1524L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x7849637c48cd1e4aL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x7849637c48cd1e46L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a96964f0a4L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x33fbc5a96964f0a3L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xe220c2db6fdd73aL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x1a77dd18db1da0fbL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x3b1b6680cf077f78L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0xa1fc5d1dac8a772L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x7849637c48cd1e4dL), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x7849637c48cd1e42L), MetaIdFactory.conceptId(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x42e485aea747fb3aL)).seal();
}
