package CQRS.Generation.generation;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class DataTypeBuilder {

  private SNode boundedContext;

  public DataTypeBuilder(SNode parameter) {
    this.boundedContext = parameter;
  }

  public Actual of(SNode type) {
    SNode dataType = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x48bafb85c0476f12L, "CQRS.Generation.structure.IDataTypeOutput"));
    SLinkOperations.setTarget(dataType, LINKS.type$7Mnf, type);
    SLinkOperations.setTarget(dataType, LINKS.boundedContext$bmqW, boundedContext);
    return new Actual(dataType);
  }

  public static final class Actual {

    private SNode currentType;

    private Actual(SNode currentType) {
      this.currentType = currentType;
    }

    public SNode build() {
      return currentType;
    }
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink type$7Mnf = MetaAdapterFactory.getReferenceLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x48bafb85c0476f12L, 0x48bafb85c0476f13L, "type");
    /*package*/ static final SReferenceLink boundedContext$bmqW = MetaAdapterFactory.getReferenceLink(0x273bc31819694c83L, 0x8484525ea753e78bL, 0x2cd995488a0177afL, 0x2cd995488a7b76f9L, "boundedContext");
  }
}
